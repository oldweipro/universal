syntax = "proto3";

package api.ai.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "universal/api/ai/v1;v1";
option java_multiple_files = true;
option java_package = "com.oldwei.universal.api.ai.v1";
option java_outer_classname = "ConversationProtoV1";

// 对话管理服务 - 合并了会话管理、消息发送和对话功能
service ConversationService {
  // === 会话创建、管理和持久化 ===
  
  // CreateConversation 创建新的对话会话
  // 为指定用户创建一个新的对话，可以指定模型、系统提示词等配置
  rpc CreateConversation (CreateConversationRequest) returns (CreateConversationReply);

  // GetConversation 获取指定对话的详细信息
  // 根据对话ID获取对话的基本信息，包括标题、模型、配置等
  rpc GetConversation (GetConversationRequest) returns (GetConversationReply);

  // UpdateConversation 更新对话的配置信息
  // 可以修改对话的标题、系统提示词、模型配置等
  rpc UpdateConversation (UpdateConversationRequest) returns (UpdateConversationReply);

  // DeleteConversation 删除指定的对话
  // 软删除对话，同时会删除该对话下的所有消息记录
  rpc DeleteConversation (DeleteConversationRequest) returns (DeleteConversationReply);

  // ListConversations 获取用户的对话列表
  // 支持分页查询和关键词搜索，返回用户的所有对话
  rpc ListConversations (ListConversationsRequest) returns (ListConversationsReply);

  // ArchiveConversation 归档对话
  // 归档对话但保留数据，用于长期存储管理
  rpc ArchiveConversation (ArchiveConversationRequest) returns (ArchiveConversationReply);

  // RestoreConversation 恢复已删除的对话
  // 从软删除状态恢复对话及其消息历史
  rpc RestoreConversation (RestoreConversationRequest) returns (RestoreConversationReply);

  // === 消息发送与多轮对话 ===

  // SendMessage 向指定对话发送消息并获取AI回复
  // 支持文件附件、工具调用、模型参数配置等高级功能
  rpc SendMessage (SendMessageRequest) returns (SendMessageReply);

  // SendStreamMessage 流式发送消息并获取AI回复
  // 支持实时流式响应，提供更好的用户体验
  rpc SendStreamMessage (SendMessageRequest) returns (stream SendMessageStreamReply);

  // GetMessages 获取对话的消息历史
  // 支持分页查询，可选择是否包含工具调用详情
  rpc GetMessages (GetMessagesRequest) returns (GetMessagesReply);

  // DeleteMessage 删除指定消息
  // 软删除消息，支持批量删除
  rpc DeleteMessage (DeleteMessageRequest) returns (DeleteMessageReply);

  // RegenerateMessage 重新生成AI回复
  // 基于上下文重新生成指定消息的回复
  rpc RegenerateMessage (RegenerateMessageRequest) returns (RegenerateMessageReply);

  // === 上下文维护和记忆管理 ===

  // GetConversationContext 获取对话上下文信息
  // 返回对话的完整上下文，包括系统提示、历史消息摘要等
  rpc GetConversationContext (GetConversationContextRequest) returns (GetConversationContextReply);

  // UpdateConversationContext 更新对话上下文
  // 手动更新对话上下文，用于记忆管理
  rpc UpdateConversationContext (UpdateConversationContextRequest) returns (UpdateConversationContextReply);

  // SummarizeConversation 总结对话内容
  // 生成对话摘要，用于长期记忆管理
  rpc SummarizeConversation (SummarizeConversationRequest) returns (SummarizeConversationReply);

  // ClearConversationHistory 清空对话历史
  // 清空对话的消息历史，但保留对话配置
  rpc ClearConversationHistory (ClearConversationHistoryRequest) returns (ClearConversationHistoryReply);

  // SetConversationMemory 设置对话记忆
  // 为对话设置长期记忆，用于跨会话的上下文保持
  rpc SetConversationMemory (SetConversationMemoryRequest) returns (SetConversationMemoryReply);

  // GetConversationMemory 获取对话记忆
  // 检索对话的长期记忆信息
  rpc GetConversationMemory (GetConversationMemoryRequest) returns (GetConversationMemoryReply);

  // === 会话状态管理 ===

  // GetConversationStats 获取对话统计信息
  // 返回对话的消息数量、token使用情况等统计数据
  rpc GetConversationStats (GetConversationStatsRequest) returns (GetConversationStatsReply);

  // ExportConversation 导出对话数据
  // 将对话导出为指定格式（JSON、Markdown等）
  rpc ExportConversation (ExportConversationRequest) returns (ExportConversationReply);

  // ImportConversation 导入对话数据
  // 从导出的数据中导入对话
  rpc ImportConversation (ImportConversationRequest) returns (ImportConversationReply);
}

// === 核心数据模型 ===

// 对话记录 - 增强版
message Conversation {
  int64 id = 1;                                    // 对话ID
  int64 user_id = 2;                              // 用户ID
  string title = 3;                               // 对话标题
  string model_name = 4;                          // 使用的模型名称
  string system_prompt = 5;                       // 系统提示词
  map<string, string> config = 6;                // 对话配置参数
  ConversationStatus status = 7;                  // 对话状态
  google.protobuf.Timestamp created_at = 8;      // 创建时间
  google.protobuf.Timestamp updated_at = 9;      // 更新时间
  google.protobuf.Timestamp last_active_at = 10; // 最后活跃时间
  
  // 新增字段
  ConversationMemory memory = 11;                 // 对话记忆
  ConversationContext context = 12;               // 对话上下文
  ConversationStats stats = 13;                   // 统计信息
  string description = 14;                        // 对话描述
  repeated string tags = 15;                      // 标签
  int32 priority = 16;                            // 优先级
  google.protobuf.Duration auto_archive_after = 17; // 自动归档时间
}

// 对话状态枚举
enum ConversationStatus {
  CONVERSATION_STATUS_UNSPECIFIED = 0;
  CONVERSATION_STATUS_ACTIVE = 1;        // 活跃
  CONVERSATION_STATUS_ARCHIVED = 2;      // 已归档
  CONVERSATION_STATUS_DELETED = 3;       // 已删除
  CONVERSATION_STATUS_PAUSED = 4;        // 已暂停
}

// 对话记忆管理
message ConversationMemory {
  string summary = 1;                            // 对话摘要
  repeated string key_points = 2;                // 关键要点
  map<string, string> user_preferences = 3;     // 用户偏好
  repeated string important_facts = 4;           // 重要事实
  google.protobuf.Timestamp last_updated = 5;   // 最后更新时间
  int32 memory_version = 6;                      // 记忆版本
}

// 对话上下文
message ConversationContext {
  repeated Message recent_messages = 1;          // 最近消息
  int32 context_window_size = 2;                // 上下文窗口大小
  int32 max_context_messages = 3;               // 最大上下文消息数
  bool auto_summarize = 4;                       // 是否自动总结
  int32 summary_threshold = 5;                   // 总结阈值（消息数）
  string current_topic = 6;                      // 当前话题
  repeated string active_tools = 7;              // 激活的工具
}

// 对话统计信息
message ConversationStats {
  int64 message_count = 1;                       // 消息总数
  int64 user_message_count = 2;                  // 用户消息数
  int64 assistant_message_count = 3;             // 助手消息数
  int64 total_input_tokens = 4;                  // 总输入token数
  int64 total_output_tokens = 5;                 // 总输出token数
  int64 tool_call_count = 6;                     // 工具调用次数
  google.protobuf.Duration total_duration = 7;  // 总持续时间
  double average_response_time = 8;              // 平均响应时间（秒）
  google.protobuf.Timestamp last_message_at = 9; // 最后消息时间
}

// 消息记录 - 增强版
message Message {
  int64 id = 1;                                  // 消息ID
  int64 conversation_id = 2;                     // 对话ID
  MessageRole role = 3;                          // 消息角色
  string content = 4;                            // 消息内容
  repeated ToolCall tool_calls = 5;              // 工具调用记录
  map<string, string> metadata = 6;             // 消息元数据
  google.protobuf.Timestamp created_at = 7;     // 创建时间
  
  // 新增字段
  MessageStatus status = 8;                      // 消息状态
  repeated MessageAttachment attachments = 9;    // 附件列表
  MessageMetrics metrics = 10;                   // 消息指标
  string parent_message_id = 11;                 // 父消息ID（用于对话分支）
  bool is_edited = 12;                           // 是否已编辑
  google.protobuf.Timestamp edited_at = 13;     // 编辑时间
  string edit_reason = 14;                       // 编辑原因
}

// 消息角色枚举
enum MessageRole {
  MESSAGE_ROLE_UNSPECIFIED = 0;
  MESSAGE_ROLE_USER = 1;           // 用户
  MESSAGE_ROLE_ASSISTANT = 2;      // 助手
  MESSAGE_ROLE_SYSTEM = 3;         // 系统
  MESSAGE_ROLE_TOOL = 4;           // 工具
}

// 消息状态枚举
enum MessageStatus {
  MESSAGE_STATUS_UNSPECIFIED = 0;
  MESSAGE_STATUS_PENDING = 1;      // 待处理
  MESSAGE_STATUS_PROCESSING = 2;   // 处理中
  MESSAGE_STATUS_COMPLETED = 3;    // 已完成
  MESSAGE_STATUS_FAILED = 4;       // 失败
  MESSAGE_STATUS_DELETED = 5;      // 已删除
}

// 消息附件
message MessageAttachment {
  string id = 1;                   // 附件ID
  string name = 2;                 // 附件名称
  string url = 3;                  // 附件URL
  string mime_type = 4;            // MIME类型
  int64 size = 5;                  // 文件大小
  AttachmentType type = 6;         // 附件类型
  map<string, string> metadata = 7; // 附件元数据
}

// 附件类型枚举
enum AttachmentType {
  ATTACHMENT_TYPE_UNSPECIFIED = 0;
  ATTACHMENT_TYPE_IMAGE = 1;       // 图片
  ATTACHMENT_TYPE_DOCUMENT = 2;    // 文档
  ATTACHMENT_TYPE_AUDIO = 3;       // 音频
  ATTACHMENT_TYPE_VIDEO = 4;       // 视频
  ATTACHMENT_TYPE_CODE = 5;        // 代码文件
}

// 消息指标
message MessageMetrics {
  int32 input_tokens = 1;          // 输入token数
  int32 output_tokens = 2;         // 输出token数
  double response_time = 3;        // 响应时间（秒）
  double cost = 4;                 // 成本估算
  string model_used = 5;           // 使用的模型
}

// 工具调用记录 - 增强版
message ToolCall {
  string id = 1;                                 // 调用ID
  string name = 2;                               // 工具名称
  string arguments = 3;                          // 调用参数(JSON格式)
  string result = 4;                             // 执行结果
  ToolCallStatus status = 5;                     // 执行状态
  string error_message = 6;                      // 错误信息
  google.protobuf.Timestamp created_at = 7;     // 执行时间
  
  // 新增字段
  google.protobuf.Duration execution_time = 8;  // 执行耗时
  map<string, string> metadata = 9;             // 工具元数据
  int32 retry_count = 10;                        // 重试次数
}

// 工具调用状态枚举
enum ToolCallStatus {
  TOOL_CALL_STATUS_UNSPECIFIED = 0;
  TOOL_CALL_STATUS_PENDING = 1;     // 待执行
  TOOL_CALL_STATUS_RUNNING = 2;     // 执行中
  TOOL_CALL_STATUS_SUCCESS = 3;     // 成功
  TOOL_CALL_STATUS_FAILED = 4;      // 失败
  TOOL_CALL_STATUS_TIMEOUT = 5;     // 超时
  TOOL_CALL_STATUS_CANCELLED = 6;   // 已取消
}

// === 请求和响应消息 ===

// 创建对话
message CreateConversationRequest {
  int64 user_id = 1;                             // 用户ID
  string title = 2;                              // 对话标题
  string model_name = 3;                         // 使用的模型名称
  string system_prompt = 4;                      // 系统提示词(可选)
  map<string, string> config = 5;               // 对话配置参数(可选)
  string description = 6;                        // 对话描述(可选)
  repeated string tags = 7;                      // 标签(可选)
  int32 priority = 8;                            // 优先级(可选)
  ConversationMemory initial_memory = 9;         // 初始记忆(可选)
}

message CreateConversationReply {
  Conversation conversation = 1;                 // 创建的对话
}

// 获取对话
message GetConversationRequest {
  int64 id = 1;                                  // 对话ID
  bool include_context = 2;                      // 是否包含上下文
  bool include_memory = 3;                       // 是否包含记忆
  bool include_stats = 4;                        // 是否包含统计
}

message GetConversationReply {
  Conversation conversation = 1;                 // 对话信息
}

// 更新对话
message UpdateConversationRequest {
  int64 id = 1;                                  // 对话ID
  string title = 2;                              // 对话标题(可选)
  string system_prompt = 3;                      // 系统提示词(可选)
  map<string, string> config = 4;               // 对话配置参数(可选)
  string description = 5;                        // 对话描述(可选)
  repeated string tags = 6;                      // 标签(可选)
  int32 priority = 7;                            // 优先级(可选)
}

message UpdateConversationReply {
  Conversation conversation = 1;                 // 更新后的对话
}

// 删除对话
message DeleteConversationRequest {
  int64 id = 1;                                  // 对话ID
  bool hard_delete = 2;                          // 是否硬删除
}

message DeleteConversationReply {}

// 列出对话
message ListConversationsRequest {
  int64 user_id = 1;                             // 用户ID
  int32 page = 2;                                // 页码
  int32 page_size = 3;                           // 页面大小
  string keyword = 4;                            // 搜索关键词(可选)
  ConversationStatus status = 5;                 // 状态过滤(可选)
  repeated string tags = 6;                      // 标签过滤(可选)
  string sort_by = 7;                            // 排序字段
  bool sort_desc = 8;                            // 是否降序
}

message ListConversationsReply {
  repeated Conversation conversations = 1;        // 对话列表
  int64 total = 2;                               // 总数
  int32 page = 3;                                // 当前页
  int32 page_size = 4;                           // 页面大小
}

// 归档对话
message ArchiveConversationRequest {
  int64 id = 1;                                  // 对话ID
  string reason = 2;                             // 归档原因(可选)
}

message ArchiveConversationReply {}

// 恢复对话
message RestoreConversationRequest {
  int64 id = 1;                                  // 对话ID
}

message RestoreConversationReply {
  Conversation conversation = 1;                 // 恢复的对话
}

// 发送消息
message SendMessageRequest {
  int64 conversation_id = 1;                     // 对话ID
  string content = 2;                            // 消息内容
  repeated MessageAttachment attachments = 3;    // 附件列表
  bool enable_tools = 4;                         // 是否启用工具调用
  repeated string allowed_tools = 5;             // 允许使用的工具列表(空表示所有)
  map<string, string> options = 6;              // 额外选项
  string parent_message_id = 7;                  // 父消息ID(用于分支对话)
  bool use_memory = 8;                           // 是否使用记忆
  bool update_memory = 9;                        // 是否更新记忆
}

message SendMessageReply {
  Message user_message = 1;                      // 用户消息
  Message assistant_message = 2;                 // AI助手回复
}

// 流式消息回复
message SendMessageStreamReply {
  string chunk = 1;                              // 消息块
  bool is_complete = 2;                          // 是否完成
  Message final_message = 3;                     // 最终消息(完成时)
  string error = 4;                              // 错误信息(如果有)
}

// 获取消息列表
message GetMessagesRequest {
  int64 conversation_id = 1;                     // 对话ID
  int32 page = 2;                                // 页码
  int32 page_size = 3;                           // 页面大小
  bool include_tool_calls = 4;                   // 是否包含工具调用详情
  bool include_attachments = 5;                  // 是否包含附件
  bool include_metrics = 6;                      // 是否包含指标
  MessageRole role_filter = 7;                   // 角色过滤
  MessageStatus status_filter = 8;               // 状态过滤
}

message GetMessagesReply {
  repeated Message messages = 1;                 // 消息列表
  int64 total = 2;                               // 总数
  int32 page = 3;                                // 当前页
  int32 page_size = 4;                           // 页面大小
}

// 删除消息
message DeleteMessageRequest {
  repeated int64 message_ids = 1;                // 消息ID列表
  bool hard_delete = 2;                          // 是否硬删除
}

message DeleteMessageReply {}

// 重新生成消息
message RegenerateMessageRequest {
  int64 message_id = 1;                          // 要重新生成的消息ID
  map<string, string> options = 2;              // 生成选项
}

message RegenerateMessageReply {
  Message new_message = 1;                       // 重新生成的消息
}

// 获取对话上下文
message GetConversationContextRequest {
  int64 conversation_id = 1;                     // 对话ID
  int32 max_messages = 2;                        // 最大消息数(可选)
}

message GetConversationContextReply {
  ConversationContext context = 1;               // 对话上下文
}

// 更新对话上下文
message UpdateConversationContextRequest {
  int64 conversation_id = 1;                     // 对话ID
  ConversationContext context = 2;               // 新的上下文
}

message UpdateConversationContextReply {}

// 总结对话
message SummarizeConversationRequest {
  int64 conversation_id = 1;                     // 对话ID
  int32 max_messages = 2;                        // 要总结的最大消息数(可选)
  string summary_style = 3;                      // 总结风格(可选)
}

message SummarizeConversationReply {
  string summary = 1;                            // 对话总结
  repeated string key_points = 2;                // 关键要点
}

// 清空对话历史
message ClearConversationHistoryRequest {
  int64 conversation_id = 1;                     // 对话ID
  bool keep_system_messages = 2;                 // 是否保留系统消息
}

message ClearConversationHistoryReply {}

// 设置对话记忆
message SetConversationMemoryRequest {
  int64 conversation_id = 1;                     // 对话ID
  ConversationMemory memory = 2;                 // 记忆信息
}

message SetConversationMemoryReply {}

// 获取对话记忆
message GetConversationMemoryRequest {
  int64 conversation_id = 1;                     // 对话ID
}

message GetConversationMemoryReply {
  ConversationMemory memory = 1;                 // 记忆信息
}

// 获取对话统计
message GetConversationStatsRequest {
  int64 conversation_id = 1;                     // 对话ID
  bool include_cost_breakdown = 2;               // 是否包含成本明细
}

message GetConversationStatsReply {
  ConversationStats stats = 1;                   // 统计信息
  map<string, double> cost_breakdown = 2;       // 成本明细
}

// 导出对话
message ExportConversationRequest {
  int64 conversation_id = 1;                     // 对话ID
  ExportFormat format = 2;                       // 导出格式
  bool include_attachments = 3;                  // 是否包含附件
  bool include_metadata = 4;                     // 是否包含元数据
}

// 导出格式枚举
enum ExportFormat {
  EXPORT_FORMAT_UNSPECIFIED = 0;
  EXPORT_FORMAT_JSON = 1;        // JSON格式
  EXPORT_FORMAT_MARKDOWN = 2;    // Markdown格式
  EXPORT_FORMAT_PDF = 3;         // PDF格式
  EXPORT_FORMAT_DOCX = 4;        // Word文档格式
}

message ExportConversationReply {
  bytes data = 1;                                // 导出数据
  string filename = 2;                           // 建议文件名
  string mime_type = 3;                          // MIME类型
}

// 导入对话
message ImportConversationRequest {
  int64 user_id = 1;                             // 用户ID
  bytes data = 2;                                // 导入数据
  ExportFormat format = 3;                       // 数据格式
  bool merge_duplicates = 4;                     // 是否合并重复对话
}

message ImportConversationReply {
  repeated Conversation conversations = 1;        // 导入的对话列表
  int32 imported_count = 2;                      // 导入数量
  int32 skipped_count = 3;                       // 跳过数量
  repeated string warnings = 4;                  // 警告信息
}