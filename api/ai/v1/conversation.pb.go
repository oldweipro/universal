// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/ai/v1/conversation.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 对话状态枚举
type ConversationStatus int32

const (
	ConversationStatus_CONVERSATION_STATUS_UNSPECIFIED ConversationStatus = 0
	ConversationStatus_CONVERSATION_STATUS_ACTIVE      ConversationStatus = 1 // 活跃
	ConversationStatus_CONVERSATION_STATUS_ARCHIVED    ConversationStatus = 2 // 已归档
	ConversationStatus_CONVERSATION_STATUS_DELETED     ConversationStatus = 3 // 已删除
	ConversationStatus_CONVERSATION_STATUS_PAUSED      ConversationStatus = 4 // 已暂停
)

// Enum value maps for ConversationStatus.
var (
	ConversationStatus_name = map[int32]string{
		0: "CONVERSATION_STATUS_UNSPECIFIED",
		1: "CONVERSATION_STATUS_ACTIVE",
		2: "CONVERSATION_STATUS_ARCHIVED",
		3: "CONVERSATION_STATUS_DELETED",
		4: "CONVERSATION_STATUS_PAUSED",
	}
	ConversationStatus_value = map[string]int32{
		"CONVERSATION_STATUS_UNSPECIFIED": 0,
		"CONVERSATION_STATUS_ACTIVE":      1,
		"CONVERSATION_STATUS_ARCHIVED":    2,
		"CONVERSATION_STATUS_DELETED":     3,
		"CONVERSATION_STATUS_PAUSED":      4,
	}
)

func (x ConversationStatus) Enum() *ConversationStatus {
	p := new(ConversationStatus)
	*p = x
	return p
}

func (x ConversationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[0].Descriptor()
}

func (ConversationStatus) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[0]
}

func (x ConversationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationStatus.Descriptor instead.
func (ConversationStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{0}
}

// 消息角色枚举
type MessageRole int32

const (
	MessageRole_MESSAGE_ROLE_UNSPECIFIED MessageRole = 0
	MessageRole_MESSAGE_ROLE_USER        MessageRole = 1 // 用户
	MessageRole_MESSAGE_ROLE_ASSISTANT   MessageRole = 2 // 助手
	MessageRole_MESSAGE_ROLE_SYSTEM      MessageRole = 3 // 系统
	MessageRole_MESSAGE_ROLE_TOOL        MessageRole = 4 // 工具
)

// Enum value maps for MessageRole.
var (
	MessageRole_name = map[int32]string{
		0: "MESSAGE_ROLE_UNSPECIFIED",
		1: "MESSAGE_ROLE_USER",
		2: "MESSAGE_ROLE_ASSISTANT",
		3: "MESSAGE_ROLE_SYSTEM",
		4: "MESSAGE_ROLE_TOOL",
	}
	MessageRole_value = map[string]int32{
		"MESSAGE_ROLE_UNSPECIFIED": 0,
		"MESSAGE_ROLE_USER":        1,
		"MESSAGE_ROLE_ASSISTANT":   2,
		"MESSAGE_ROLE_SYSTEM":      3,
		"MESSAGE_ROLE_TOOL":        4,
	}
)

func (x MessageRole) Enum() *MessageRole {
	p := new(MessageRole)
	*p = x
	return p
}

func (x MessageRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[1].Descriptor()
}

func (MessageRole) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[1]
}

func (x MessageRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageRole.Descriptor instead.
func (MessageRole) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{1}
}

// 消息状态枚举
type MessageStatus int32

const (
	MessageStatus_MESSAGE_STATUS_UNSPECIFIED MessageStatus = 0
	MessageStatus_MESSAGE_STATUS_PENDING     MessageStatus = 1 // 待处理
	MessageStatus_MESSAGE_STATUS_PROCESSING  MessageStatus = 2 // 处理中
	MessageStatus_MESSAGE_STATUS_COMPLETED   MessageStatus = 3 // 已完成
	MessageStatus_MESSAGE_STATUS_FAILED      MessageStatus = 4 // 失败
	MessageStatus_MESSAGE_STATUS_DELETED     MessageStatus = 5 // 已删除
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_STATUS_UNSPECIFIED",
		1: "MESSAGE_STATUS_PENDING",
		2: "MESSAGE_STATUS_PROCESSING",
		3: "MESSAGE_STATUS_COMPLETED",
		4: "MESSAGE_STATUS_FAILED",
		5: "MESSAGE_STATUS_DELETED",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_STATUS_UNSPECIFIED": 0,
		"MESSAGE_STATUS_PENDING":     1,
		"MESSAGE_STATUS_PROCESSING":  2,
		"MESSAGE_STATUS_COMPLETED":   3,
		"MESSAGE_STATUS_FAILED":      4,
		"MESSAGE_STATUS_DELETED":     5,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[2].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[2]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{2}
}

// 附件类型枚举
type AttachmentType int32

const (
	AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED AttachmentType = 0
	AttachmentType_ATTACHMENT_TYPE_IMAGE       AttachmentType = 1 // 图片
	AttachmentType_ATTACHMENT_TYPE_DOCUMENT    AttachmentType = 2 // 文档
	AttachmentType_ATTACHMENT_TYPE_AUDIO       AttachmentType = 3 // 音频
	AttachmentType_ATTACHMENT_TYPE_VIDEO       AttachmentType = 4 // 视频
	AttachmentType_ATTACHMENT_TYPE_CODE        AttachmentType = 5 // 代码文件
)

// Enum value maps for AttachmentType.
var (
	AttachmentType_name = map[int32]string{
		0: "ATTACHMENT_TYPE_UNSPECIFIED",
		1: "ATTACHMENT_TYPE_IMAGE",
		2: "ATTACHMENT_TYPE_DOCUMENT",
		3: "ATTACHMENT_TYPE_AUDIO",
		4: "ATTACHMENT_TYPE_VIDEO",
		5: "ATTACHMENT_TYPE_CODE",
	}
	AttachmentType_value = map[string]int32{
		"ATTACHMENT_TYPE_UNSPECIFIED": 0,
		"ATTACHMENT_TYPE_IMAGE":       1,
		"ATTACHMENT_TYPE_DOCUMENT":    2,
		"ATTACHMENT_TYPE_AUDIO":       3,
		"ATTACHMENT_TYPE_VIDEO":       4,
		"ATTACHMENT_TYPE_CODE":        5,
	}
)

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}

func (x AttachmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[3].Descriptor()
}

func (AttachmentType) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[3]
}

func (x AttachmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachmentType.Descriptor instead.
func (AttachmentType) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{3}
}

// 工具调用状态枚举
type ToolCallStatus int32

const (
	ToolCallStatus_TOOL_CALL_STATUS_UNSPECIFIED ToolCallStatus = 0
	ToolCallStatus_TOOL_CALL_STATUS_PENDING     ToolCallStatus = 1 // 待执行
	ToolCallStatus_TOOL_CALL_STATUS_RUNNING     ToolCallStatus = 2 // 执行中
	ToolCallStatus_TOOL_CALL_STATUS_SUCCESS     ToolCallStatus = 3 // 成功
	ToolCallStatus_TOOL_CALL_STATUS_FAILED      ToolCallStatus = 4 // 失败
	ToolCallStatus_TOOL_CALL_STATUS_TIMEOUT     ToolCallStatus = 5 // 超时
	ToolCallStatus_TOOL_CALL_STATUS_CANCELLED   ToolCallStatus = 6 // 已取消
)

// Enum value maps for ToolCallStatus.
var (
	ToolCallStatus_name = map[int32]string{
		0: "TOOL_CALL_STATUS_UNSPECIFIED",
		1: "TOOL_CALL_STATUS_PENDING",
		2: "TOOL_CALL_STATUS_RUNNING",
		3: "TOOL_CALL_STATUS_SUCCESS",
		4: "TOOL_CALL_STATUS_FAILED",
		5: "TOOL_CALL_STATUS_TIMEOUT",
		6: "TOOL_CALL_STATUS_CANCELLED",
	}
	ToolCallStatus_value = map[string]int32{
		"TOOL_CALL_STATUS_UNSPECIFIED": 0,
		"TOOL_CALL_STATUS_PENDING":     1,
		"TOOL_CALL_STATUS_RUNNING":     2,
		"TOOL_CALL_STATUS_SUCCESS":     3,
		"TOOL_CALL_STATUS_FAILED":      4,
		"TOOL_CALL_STATUS_TIMEOUT":     5,
		"TOOL_CALL_STATUS_CANCELLED":   6,
	}
)

func (x ToolCallStatus) Enum() *ToolCallStatus {
	p := new(ToolCallStatus)
	*p = x
	return p
}

func (x ToolCallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToolCallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[4].Descriptor()
}

func (ToolCallStatus) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[4]
}

func (x ToolCallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToolCallStatus.Descriptor instead.
func (ToolCallStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{4}
}

// 导出格式枚举
type ExportFormat int32

const (
	ExportFormat_EXPORT_FORMAT_UNSPECIFIED ExportFormat = 0
	ExportFormat_EXPORT_FORMAT_JSON        ExportFormat = 1 // JSON格式
	ExportFormat_EXPORT_FORMAT_MARKDOWN    ExportFormat = 2 // Markdown格式
	ExportFormat_EXPORT_FORMAT_PDF         ExportFormat = 3 // PDF格式
	ExportFormat_EXPORT_FORMAT_DOCX        ExportFormat = 4 // Word文档格式
)

// Enum value maps for ExportFormat.
var (
	ExportFormat_name = map[int32]string{
		0: "EXPORT_FORMAT_UNSPECIFIED",
		1: "EXPORT_FORMAT_JSON",
		2: "EXPORT_FORMAT_MARKDOWN",
		3: "EXPORT_FORMAT_PDF",
		4: "EXPORT_FORMAT_DOCX",
	}
	ExportFormat_value = map[string]int32{
		"EXPORT_FORMAT_UNSPECIFIED": 0,
		"EXPORT_FORMAT_JSON":        1,
		"EXPORT_FORMAT_MARKDOWN":    2,
		"EXPORT_FORMAT_PDF":         3,
		"EXPORT_FORMAT_DOCX":        4,
	}
)

func (x ExportFormat) Enum() *ExportFormat {
	p := new(ExportFormat)
	*p = x
	return p
}

func (x ExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ai_v1_conversation_proto_enumTypes[5].Descriptor()
}

func (ExportFormat) Type() protoreflect.EnumType {
	return &file_api_ai_v1_conversation_proto_enumTypes[5]
}

func (x ExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportFormat.Descriptor instead.
func (ExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{5}
}

// 对话记录 - 增强版
type ConversationInfo struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                  // 对话ID
	UserId       int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                            // 用户ID
	Title        string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                                                             // 对话标题
	ModelName    string                 `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`                                                    // 使用的模型名称
	SystemPrompt string                 `protobuf:"bytes,5,opt,name=system_prompt,json=systemPrompt,proto3" json:"system_prompt,omitempty"`                                           // 系统提示词
	Config       map[string]string      `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 对话配置参数
	Status       ConversationStatus     `protobuf:"varint,7,opt,name=status,proto3,enum=api.ai.v1.ConversationStatus" json:"status,omitempty"`                                        // 对话状态
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                    // 创建时间
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                    // 更新时间
	LastActiveAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_active_at,json=lastActiveAt,proto3" json:"last_active_at,omitempty"`                                        // 最后活跃时间
	// 新增字段
	Memory           *ConversationMemory  `protobuf:"bytes,11,opt,name=memory,proto3" json:"memory,omitempty"`                                               // 对话记忆
	Context          *ConversationContext `protobuf:"bytes,12,opt,name=context,proto3" json:"context,omitempty"`                                             // 对话上下文
	Stats            *ConversationStats   `protobuf:"bytes,13,opt,name=stats,proto3" json:"stats,omitempty"`                                                 // 统计信息
	Description      string               `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`                                     // 对话描述
	Tags             []string             `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`                                                   // 标签
	Priority         int32                `protobuf:"varint,16,opt,name=priority,proto3" json:"priority,omitempty"`                                          // 优先级
	AutoArchiveAfter *durationpb.Duration `protobuf:"bytes,17,opt,name=auto_archive_after,json=autoArchiveAfter,proto3" json:"auto_archive_after,omitempty"` // 自动归档时间
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConversationInfo) Reset() {
	*x = ConversationInfo{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationInfo) ProtoMessage() {}

func (x *ConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationInfo.ProtoReflect.Descriptor instead.
func (*ConversationInfo) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *ConversationInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConversationInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConversationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ConversationInfo) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ConversationInfo) GetSystemPrompt() string {
	if x != nil {
		return x.SystemPrompt
	}
	return ""
}

func (x *ConversationInfo) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConversationInfo) GetStatus() ConversationStatus {
	if x != nil {
		return x.Status
	}
	return ConversationStatus_CONVERSATION_STATUS_UNSPECIFIED
}

func (x *ConversationInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConversationInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConversationInfo) GetLastActiveAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

func (x *ConversationInfo) GetMemory() *ConversationMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ConversationInfo) GetContext() *ConversationContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ConversationInfo) GetStats() *ConversationStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ConversationInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConversationInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ConversationInfo) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ConversationInfo) GetAutoArchiveAfter() *durationpb.Duration {
	if x != nil {
		return x.AutoArchiveAfter
	}
	return nil
}

// 对话记忆管理
type ConversationMemory struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Summary         string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`                                                                                                                  // 对话摘要
	KeyPoints       []string               `protobuf:"bytes,2,rep,name=key_points,json=keyPoints,proto3" json:"key_points,omitempty"`                                                                                             // 关键要点
	UserPreferences map[string]string      `protobuf:"bytes,3,rep,name=user_preferences,json=userPreferences,proto3" json:"user_preferences,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 用户偏好
	ImportantFacts  []string               `protobuf:"bytes,4,rep,name=important_facts,json=importantFacts,proto3" json:"important_facts,omitempty"`                                                                              // 重要事实
	LastUpdated     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                                                                                       // 最后更新时间
	MemoryVersion   int32                  `protobuf:"varint,6,opt,name=memory_version,json=memoryVersion,proto3" json:"memory_version,omitempty"`                                                                                // 记忆版本
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConversationMemory) Reset() {
	*x = ConversationMemory{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMemory) ProtoMessage() {}

func (x *ConversationMemory) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMemory.ProtoReflect.Descriptor instead.
func (*ConversationMemory) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *ConversationMemory) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ConversationMemory) GetKeyPoints() []string {
	if x != nil {
		return x.KeyPoints
	}
	return nil
}

func (x *ConversationMemory) GetUserPreferences() map[string]string {
	if x != nil {
		return x.UserPreferences
	}
	return nil
}

func (x *ConversationMemory) GetImportantFacts() []string {
	if x != nil {
		return x.ImportantFacts
	}
	return nil
}

func (x *ConversationMemory) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ConversationMemory) GetMemoryVersion() int32 {
	if x != nil {
		return x.MemoryVersion
	}
	return 0
}

// 对话上下文
type ConversationContext struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RecentMessages     []*Message             `protobuf:"bytes,1,rep,name=recent_messages,json=recentMessages,proto3" json:"recent_messages,omitempty"`                // 最近消息
	ContextWindowSize  int32                  `protobuf:"varint,2,opt,name=context_window_size,json=contextWindowSize,proto3" json:"context_window_size,omitempty"`    // 上下文窗口大小
	MaxContextMessages int32                  `protobuf:"varint,3,opt,name=max_context_messages,json=maxContextMessages,proto3" json:"max_context_messages,omitempty"` // 最大上下文消息数
	AutoSummarize      bool                   `protobuf:"varint,4,opt,name=auto_summarize,json=autoSummarize,proto3" json:"auto_summarize,omitempty"`                  // 是否自动总结
	SummaryThreshold   int32                  `protobuf:"varint,5,opt,name=summary_threshold,json=summaryThreshold,proto3" json:"summary_threshold,omitempty"`         // 总结阈值（消息数）
	CurrentTopic       string                 `protobuf:"bytes,6,opt,name=current_topic,json=currentTopic,proto3" json:"current_topic,omitempty"`                      // 当前话题
	ActiveTools        []string               `protobuf:"bytes,7,rep,name=active_tools,json=activeTools,proto3" json:"active_tools,omitempty"`                         // 激活的工具
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConversationContext) Reset() {
	*x = ConversationContext{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationContext) ProtoMessage() {}

func (x *ConversationContext) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationContext.ProtoReflect.Descriptor instead.
func (*ConversationContext) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *ConversationContext) GetRecentMessages() []*Message {
	if x != nil {
		return x.RecentMessages
	}
	return nil
}

func (x *ConversationContext) GetContextWindowSize() int32 {
	if x != nil {
		return x.ContextWindowSize
	}
	return 0
}

func (x *ConversationContext) GetMaxContextMessages() int32 {
	if x != nil {
		return x.MaxContextMessages
	}
	return 0
}

func (x *ConversationContext) GetAutoSummarize() bool {
	if x != nil {
		return x.AutoSummarize
	}
	return false
}

func (x *ConversationContext) GetSummaryThreshold() int32 {
	if x != nil {
		return x.SummaryThreshold
	}
	return 0
}

func (x *ConversationContext) GetCurrentTopic() string {
	if x != nil {
		return x.CurrentTopic
	}
	return ""
}

func (x *ConversationContext) GetActiveTools() []string {
	if x != nil {
		return x.ActiveTools
	}
	return nil
}

// 对话统计信息
type ConversationStats struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MessageCount          int64                  `protobuf:"varint,1,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`                              // 消息总数
	UserMessageCount      int64                  `protobuf:"varint,2,opt,name=user_message_count,json=userMessageCount,proto3" json:"user_message_count,omitempty"`                // 用户消息数
	AssistantMessageCount int64                  `protobuf:"varint,3,opt,name=assistant_message_count,json=assistantMessageCount,proto3" json:"assistant_message_count,omitempty"` // 助手消息数
	TotalInputTokens      int64                  `protobuf:"varint,4,opt,name=total_input_tokens,json=totalInputTokens,proto3" json:"total_input_tokens,omitempty"`                // 总输入token数
	TotalOutputTokens     int64                  `protobuf:"varint,5,opt,name=total_output_tokens,json=totalOutputTokens,proto3" json:"total_output_tokens,omitempty"`             // 总输出token数
	ToolCallCount         int64                  `protobuf:"varint,6,opt,name=tool_call_count,json=toolCallCount,proto3" json:"tool_call_count,omitempty"`                         // 工具调用次数
	TotalDuration         *durationpb.Duration   `protobuf:"bytes,7,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`                            // 总持续时间
	AverageResponseTime   float64                `protobuf:"fixed64,8,opt,name=average_response_time,json=averageResponseTime,proto3" json:"average_response_time,omitempty"`      // 平均响应时间（秒）
	LastMessageAt         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_message_at,json=lastMessageAt,proto3" json:"last_message_at,omitempty"`                          // 最后消息时间
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConversationStats) Reset() {
	*x = ConversationStats{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationStats) ProtoMessage() {}

func (x *ConversationStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationStats.ProtoReflect.Descriptor instead.
func (*ConversationStats) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *ConversationStats) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *ConversationStats) GetUserMessageCount() int64 {
	if x != nil {
		return x.UserMessageCount
	}
	return 0
}

func (x *ConversationStats) GetAssistantMessageCount() int64 {
	if x != nil {
		return x.AssistantMessageCount
	}
	return 0
}

func (x *ConversationStats) GetTotalInputTokens() int64 {
	if x != nil {
		return x.TotalInputTokens
	}
	return 0
}

func (x *ConversationStats) GetTotalOutputTokens() int64 {
	if x != nil {
		return x.TotalOutputTokens
	}
	return 0
}

func (x *ConversationStats) GetToolCallCount() int64 {
	if x != nil {
		return x.ToolCallCount
	}
	return 0
}

func (x *ConversationStats) GetTotalDuration() *durationpb.Duration {
	if x != nil {
		return x.TotalDuration
	}
	return nil
}

func (x *ConversationStats) GetAverageResponseTime() float64 {
	if x != nil {
		return x.AverageResponseTime
	}
	return 0
}

func (x *ConversationStats) GetLastMessageAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastMessageAt
	}
	return nil
}

// 消息记录 - 增强版
type Message struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                      // 消息ID
	ConversationId int64                  `protobuf:"varint,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`                                        // 对话ID
	Role           MessageRole            `protobuf:"varint,3,opt,name=role,proto3,enum=api.ai.v1.MessageRole" json:"role,omitempty"`                                                       // 消息角色
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                                             // 消息内容
	ToolCalls      []*ToolCall            `protobuf:"bytes,5,rep,name=tool_calls,json=toolCalls,proto3" json:"tool_calls,omitempty"`                                                        // 工具调用记录
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 消息元数据
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                        // 创建时间
	// 新增字段
	Status          MessageStatus          `protobuf:"varint,8,opt,name=status,proto3,enum=api.ai.v1.MessageStatus" json:"status,omitempty"`               // 消息状态
	Attachments     []*MessageAttachment   `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`                                   // 附件列表
	Metrics         *MessageMetrics        `protobuf:"bytes,10,opt,name=metrics,proto3" json:"metrics,omitempty"`                                          // 消息指标
	ParentMessageId string                 `protobuf:"bytes,11,opt,name=parent_message_id,json=parentMessageId,proto3" json:"parent_message_id,omitempty"` // 父消息ID（用于对话分支）
	IsEdited        bool                   `protobuf:"varint,12,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`                       // 是否已编辑
	EditedAt        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=edited_at,json=editedAt,proto3" json:"edited_at,omitempty"`                        // 编辑时间
	EditReason      string                 `protobuf:"bytes,14,opt,name=edit_reason,json=editReason,proto3" json:"edit_reason,omitempty"`                  // 编辑原因
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *Message) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *Message) GetRole() MessageRole {
	if x != nil {
		return x.Role
	}
	return MessageRole_MESSAGE_ROLE_UNSPECIFIED
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetToolCalls() []*ToolCall {
	if x != nil {
		return x.ToolCalls
	}
	return nil
}

func (x *Message) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Message) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Message) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_UNSPECIFIED
}

func (x *Message) GetAttachments() []*MessageAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Message) GetMetrics() *MessageMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Message) GetParentMessageId() string {
	if x != nil {
		return x.ParentMessageId
	}
	return ""
}

func (x *Message) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Message) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

func (x *Message) GetEditReason() string {
	if x != nil {
		return x.EditReason
	}
	return ""
}

// 消息附件
type MessageAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // 附件ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                   // 附件名称
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                                                                     // 附件URL
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`                                                           // MIME类型
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                                                                  // 文件大小
	Type          AttachmentType         `protobuf:"varint,6,opt,name=type,proto3,enum=api.ai.v1.AttachmentType" json:"type,omitempty"`                                                    // 附件类型
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 附件元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAttachment) Reset() {
	*x = MessageAttachment{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAttachment) ProtoMessage() {}

func (x *MessageAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAttachment.ProtoReflect.Descriptor instead.
func (*MessageAttachment) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *MessageAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageAttachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageAttachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MessageAttachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MessageAttachment) GetType() AttachmentType {
	if x != nil {
		return x.Type
	}
	return AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *MessageAttachment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 消息指标
type MessageMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InputTokens   int32                  `protobuf:"varint,1,opt,name=input_tokens,json=inputTokens,proto3" json:"input_tokens,omitempty"`     // 输入token数
	OutputTokens  int32                  `protobuf:"varint,2,opt,name=output_tokens,json=outputTokens,proto3" json:"output_tokens,omitempty"`  // 输出token数
	ResponseTime  float64                `protobuf:"fixed64,3,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"` // 响应时间（秒）
	Cost          float64                `protobuf:"fixed64,4,opt,name=cost,proto3" json:"cost,omitempty"`                                     // 成本估算
	ModelUsed     string                 `protobuf:"bytes,5,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`            // 使用的模型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageMetrics) Reset() {
	*x = MessageMetrics{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetrics) ProtoMessage() {}

func (x *MessageMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetrics.ProtoReflect.Descriptor instead.
func (*MessageMetrics) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *MessageMetrics) GetInputTokens() int32 {
	if x != nil {
		return x.InputTokens
	}
	return 0
}

func (x *MessageMetrics) GetOutputTokens() int32 {
	if x != nil {
		return x.OutputTokens
	}
	return 0
}

func (x *MessageMetrics) GetResponseTime() float64 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *MessageMetrics) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *MessageMetrics) GetModelUsed() string {
	if x != nil {
		return x.ModelUsed
	}
	return ""
}

// 工具调用记录 - 增强版
type ToolCall struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // 调用ID
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                     // 工具名称
	Arguments    string                 `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`                           // 调用参数(JSON格式)
	Result       string                 `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`                                 // 执行结果
	Status       ToolCallStatus         `protobuf:"varint,5,opt,name=status,proto3,enum=api.ai.v1.ToolCallStatus" json:"status,omitempty"`  // 执行状态
	ErrorMessage string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // 执行时间
	// 新增字段
	ExecutionTime *durationpb.Duration `protobuf:"bytes,8,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`                                            // 执行耗时
	Metadata      map[string]string    `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 工具元数据
	RetryCount    int32                `protobuf:"varint,10,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                                   // 重试次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCall) Reset() {
	*x = ToolCall{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCall) ProtoMessage() {}

func (x *ToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *ToolCall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToolCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolCall) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *ToolCall) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ToolCall) GetStatus() ToolCallStatus {
	if x != nil {
		return x.Status
	}
	return ToolCallStatus_TOOL_CALL_STATUS_UNSPECIFIED
}

func (x *ToolCall) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ToolCall) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ToolCall) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *ToolCall) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ToolCall) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

// 创建对话
type CreateConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                            // 用户ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                             // 对话标题
	ModelName     string                 `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`                                                    // 使用的模型名称
	SystemPrompt  string                 `protobuf:"bytes,4,opt,name=system_prompt,json=systemPrompt,proto3" json:"system_prompt,omitempty"`                                           // 系统提示词(可选)
	Config        map[string]string      `protobuf:"bytes,5,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 对话配置参数(可选)
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                                                                 // 对话描述(可选)
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                                                               // 标签(可选)
	Priority      int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`                                                                      // 优先级(可选)
	InitialMemory *ConversationMemory    `protobuf:"bytes,9,opt,name=initial_memory,json=initialMemory,proto3" json:"initial_memory,omitempty"`                                        // 初始记忆(可选)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *CreateConversationRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateConversationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateConversationRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CreateConversationRequest) GetSystemPrompt() string {
	if x != nil {
		return x.SystemPrompt
	}
	return ""
}

func (x *CreateConversationRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateConversationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateConversationRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateConversationRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateConversationRequest) GetInitialMemory() *ConversationMemory {
	if x != nil {
		return x.InitialMemory
	}
	return nil
}

type CreateConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *ConversationInfo      `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"` // 创建的对话
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationReply) Reset() {
	*x = CreateConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationReply) ProtoMessage() {}

func (x *CreateConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationReply.ProtoReflect.Descriptor instead.
func (*CreateConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *CreateConversationReply) GetConversation() *ConversationInfo {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// 获取对话
type GetConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                               // 对话ID
	IncludeContext bool                   `protobuf:"varint,2,opt,name=include_context,json=includeContext,proto3" json:"include_context,omitempty"` // 是否包含上下文
	IncludeMemory  bool                   `protobuf:"varint,3,opt,name=include_memory,json=includeMemory,proto3" json:"include_memory,omitempty"`    // 是否包含记忆
	IncludeStats   bool                   `protobuf:"varint,4,opt,name=include_stats,json=includeStats,proto3" json:"include_stats,omitempty"`       // 是否包含统计
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *GetConversationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetConversationRequest) GetIncludeContext() bool {
	if x != nil {
		return x.IncludeContext
	}
	return false
}

func (x *GetConversationRequest) GetIncludeMemory() bool {
	if x != nil {
		return x.IncludeMemory
	}
	return false
}

func (x *GetConversationRequest) GetIncludeStats() bool {
	if x != nil {
		return x.IncludeStats
	}
	return false
}

type GetConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *ConversationInfo      `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"` // 对话信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationReply) Reset() {
	*x = GetConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationReply) ProtoMessage() {}

func (x *GetConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationReply.ProtoReflect.Descriptor instead.
func (*GetConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{11}
}

func (x *GetConversationReply) GetConversation() *ConversationInfo {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// 更新对话
type UpdateConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                  // 对话ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                             // 对话标题(可选)
	SystemPrompt  string                 `protobuf:"bytes,3,opt,name=system_prompt,json=systemPrompt,proto3" json:"system_prompt,omitempty"`                                           // 系统提示词(可选)
	Config        map[string]string      `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 对话配置参数(可选)
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                                                 // 对话描述(可选)
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                                                               // 标签(可选)
	Priority      int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`                                                                      // 优先级(可选)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationRequest) Reset() {
	*x = UpdateConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationRequest) ProtoMessage() {}

func (x *UpdateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationRequest.ProtoReflect.Descriptor instead.
func (*UpdateConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateConversationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateConversationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateConversationRequest) GetSystemPrompt() string {
	if x != nil {
		return x.SystemPrompt
	}
	return ""
}

func (x *UpdateConversationRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateConversationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateConversationRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateConversationRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdateConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *ConversationInfo      `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"` // 更新后的对话
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationReply) Reset() {
	*x = UpdateConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationReply) ProtoMessage() {}

func (x *UpdateConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationReply.ProtoReflect.Descriptor instead.
func (*UpdateConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateConversationReply) GetConversation() *ConversationInfo {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// 删除对话
type DeleteConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 对话ID
	HardDelete    bool                   `protobuf:"varint,2,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"` // 是否硬删除
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConversationRequest) Reset() {
	*x = DeleteConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationRequest) ProtoMessage() {}

func (x *DeleteConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationRequest.ProtoReflect.Descriptor instead.
func (*DeleteConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteConversationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteConversationRequest) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

type DeleteConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConversationReply) Reset() {
	*x = DeleteConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationReply) ProtoMessage() {}

func (x *DeleteConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationReply.ProtoReflect.Descriptor instead.
func (*DeleteConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{15}
}

// 列出对话
type ListConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户ID
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                                       // 页码
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`               // 页面大小
	Keyword       string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`                                  // 搜索关键词(可选)
	Status        ConversationStatus     `protobuf:"varint,5,opt,name=status,proto3,enum=api.ai.v1.ConversationStatus" json:"status,omitempty"` // 状态过滤(可选)
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                        // 标签过滤(可选)
	SortBy        string                 `protobuf:"bytes,7,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`                      // 排序字段
	SortDesc      bool                   `protobuf:"varint,8,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`               // 是否降序
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConversationsRequest) Reset() {
	*x = ListConversationsRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsRequest) ProtoMessage() {}

func (x *ListConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsRequest.ProtoReflect.Descriptor instead.
func (*ListConversationsRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{16}
}

func (x *ListConversationsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListConversationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListConversationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListConversationsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListConversationsRequest) GetStatus() ConversationStatus {
	if x != nil {
		return x.Status
	}
	return ConversationStatus_CONVERSATION_STATUS_UNSPECIFIED
}

func (x *ListConversationsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListConversationsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListConversationsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

type ListConversationsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*ConversationInfo    `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`        // 对话列表
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 页面大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConversationsReply) Reset() {
	*x = ListConversationsReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConversationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationsReply) ProtoMessage() {}

func (x *ListConversationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationsReply.ProtoReflect.Descriptor instead.
func (*ListConversationsReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{17}
}

func (x *ListConversationsReply) GetConversations() []*ConversationInfo {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *ListConversationsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListConversationsReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListConversationsReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 归档对话
type ArchiveConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // 对话ID
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // 归档原因(可选)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveConversationRequest) Reset() {
	*x = ArchiveConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveConversationRequest) ProtoMessage() {}

func (x *ArchiveConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveConversationRequest.ProtoReflect.Descriptor instead.
func (*ArchiveConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{18}
}

func (x *ArchiveConversationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArchiveConversationRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ArchiveConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveConversationReply) Reset() {
	*x = ArchiveConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveConversationReply) ProtoMessage() {}

func (x *ArchiveConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveConversationReply.ProtoReflect.Descriptor instead.
func (*ArchiveConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{19}
}

// 恢复对话
type RestoreConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 对话ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreConversationRequest) Reset() {
	*x = RestoreConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreConversationRequest) ProtoMessage() {}

func (x *RestoreConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreConversationRequest.ProtoReflect.Descriptor instead.
func (*RestoreConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{20}
}

func (x *RestoreConversationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RestoreConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *ConversationInfo      `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"` // 恢复的对话
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreConversationReply) Reset() {
	*x = RestoreConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreConversationReply) ProtoMessage() {}

func (x *RestoreConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreConversationReply.ProtoReflect.Descriptor instead.
func (*RestoreConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{21}
}

func (x *RestoreConversationReply) GetConversation() *ConversationInfo {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// 发送消息
type SendMessageRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationId  int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`                                      // 对话ID
	Content         string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                                                                           // 消息内容
	Attachments     []*MessageAttachment   `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`                                                                   // 附件列表
	EnableTools     bool                   `protobuf:"varint,4,opt,name=enable_tools,json=enableTools,proto3" json:"enable_tools,omitempty"`                                               // 是否启用工具调用
	AllowedTools    []string               `protobuf:"bytes,5,rep,name=allowed_tools,json=allowedTools,proto3" json:"allowed_tools,omitempty"`                                             // 允许使用的工具列表(空表示所有)
	Options         map[string]string      `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 额外选项
	ParentMessageId string                 `protobuf:"bytes,7,opt,name=parent_message_id,json=parentMessageId,proto3" json:"parent_message_id,omitempty"`                                  // 父消息ID(用于分支对话)
	UseMemory       bool                   `protobuf:"varint,8,opt,name=use_memory,json=useMemory,proto3" json:"use_memory,omitempty"`                                                     // 是否使用记忆
	UpdateMemory    bool                   `protobuf:"varint,9,opt,name=update_memory,json=updateMemory,proto3" json:"update_memory,omitempty"`                                            // 是否更新记忆
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{22}
}

func (x *SendMessageRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetAttachments() []*MessageAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *SendMessageRequest) GetEnableTools() bool {
	if x != nil {
		return x.EnableTools
	}
	return false
}

func (x *SendMessageRequest) GetAllowedTools() []string {
	if x != nil {
		return x.AllowedTools
	}
	return nil
}

func (x *SendMessageRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SendMessageRequest) GetParentMessageId() string {
	if x != nil {
		return x.ParentMessageId
	}
	return ""
}

func (x *SendMessageRequest) GetUseMemory() bool {
	if x != nil {
		return x.UseMemory
	}
	return false
}

func (x *SendMessageRequest) GetUpdateMemory() bool {
	if x != nil {
		return x.UpdateMemory
	}
	return false
}

type SendMessageReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserMessage      *Message               `protobuf:"bytes,1,opt,name=user_message,json=userMessage,proto3" json:"user_message,omitempty"`                // 用户消息
	AssistantMessage *Message               `protobuf:"bytes,2,opt,name=assistant_message,json=assistantMessage,proto3" json:"assistant_message,omitempty"` // AI助手回复
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendMessageReply) Reset() {
	*x = SendMessageReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReply) ProtoMessage() {}

func (x *SendMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReply.ProtoReflect.Descriptor instead.
func (*SendMessageReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{23}
}

func (x *SendMessageReply) GetUserMessage() *Message {
	if x != nil {
		return x.UserMessage
	}
	return nil
}

func (x *SendMessageReply) GetAssistantMessage() *Message {
	if x != nil {
		return x.AssistantMessage
	}
	return nil
}

// 流式消息回复
type SendMessageStreamReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         string                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`                                   // 消息块
	IsComplete    bool                   `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`      // 是否完成
	FinalMessage  *Message               `protobuf:"bytes,3,opt,name=final_message,json=finalMessage,proto3" json:"final_message,omitempty"` // 最终消息(完成时)
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`                                   // 错误信息(如果有)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageStreamReply) Reset() {
	*x = SendMessageStreamReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageStreamReply) ProtoMessage() {}

func (x *SendMessageStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageStreamReply.ProtoReflect.Descriptor instead.
func (*SendMessageStreamReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{24}
}

func (x *SendMessageStreamReply) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

func (x *SendMessageStreamReply) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *SendMessageStreamReply) GetFinalMessage() *Message {
	if x != nil {
		return x.FinalMessage
	}
	return nil
}

func (x *SendMessageStreamReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 获取消息列表
type GetMessagesRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConversationId     int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`                        // 对话ID
	Page               int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                                                                  // 页码
	PageSize           int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                          // 页面大小
	IncludeToolCalls   bool                   `protobuf:"varint,4,opt,name=include_tool_calls,json=includeToolCalls,proto3" json:"include_tool_calls,omitempty"`                // 是否包含工具调用详情
	IncludeAttachments bool                   `protobuf:"varint,5,opt,name=include_attachments,json=includeAttachments,proto3" json:"include_attachments,omitempty"`            // 是否包含附件
	IncludeMetrics     bool                   `protobuf:"varint,6,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`                        // 是否包含指标
	RoleFilter         MessageRole            `protobuf:"varint,7,opt,name=role_filter,json=roleFilter,proto3,enum=api.ai.v1.MessageRole" json:"role_filter,omitempty"`         // 角色过滤
	StatusFilter       MessageStatus          `protobuf:"varint,8,opt,name=status_filter,json=statusFilter,proto3,enum=api.ai.v1.MessageStatus" json:"status_filter,omitempty"` // 状态过滤
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{25}
}

func (x *GetMessagesRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *GetMessagesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMessagesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMessagesRequest) GetIncludeToolCalls() bool {
	if x != nil {
		return x.IncludeToolCalls
	}
	return false
}

func (x *GetMessagesRequest) GetIncludeAttachments() bool {
	if x != nil {
		return x.IncludeAttachments
	}
	return false
}

func (x *GetMessagesRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

func (x *GetMessagesRequest) GetRoleFilter() MessageRole {
	if x != nil {
		return x.RoleFilter
	}
	return MessageRole_MESSAGE_ROLE_UNSPECIFIED
}

func (x *GetMessagesRequest) GetStatusFilter() MessageStatus {
	if x != nil {
		return x.StatusFilter
	}
	return MessageStatus_MESSAGE_STATUS_UNSPECIFIED
}

type GetMessagesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`                  // 消息列表
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 页面大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesReply) Reset() {
	*x = GetMessagesReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesReply) ProtoMessage() {}

func (x *GetMessagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesReply.ProtoReflect.Descriptor instead.
func (*GetMessagesReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{26}
}

func (x *GetMessagesReply) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessagesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetMessagesReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMessagesReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 删除消息
type DeleteMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageIds    []int64                `protobuf:"varint,1,rep,packed,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"` // 消息ID列表
	HardDelete    bool                   `protobuf:"varint,2,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"`        // 是否硬删除
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteMessageRequest) GetMessageIds() []int64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

func (x *DeleteMessageRequest) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

type DeleteMessageReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageReply) Reset() {
	*x = DeleteMessageReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageReply) ProtoMessage() {}

func (x *DeleteMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageReply.ProtoReflect.Descriptor instead.
func (*DeleteMessageReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{28}
}

// 重新生成消息
type RegenerateMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     int64                  `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                                                     // 要重新生成的消息ID
	Options       map[string]string      `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 生成选项
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenerateMessageRequest) Reset() {
	*x = RegenerateMessageRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateMessageRequest) ProtoMessage() {}

func (x *RegenerateMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateMessageRequest.ProtoReflect.Descriptor instead.
func (*RegenerateMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{29}
}

func (x *RegenerateMessageRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *RegenerateMessageRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type RegenerateMessageReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewMessage    *Message               `protobuf:"bytes,1,opt,name=new_message,json=newMessage,proto3" json:"new_message,omitempty"` // 重新生成的消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenerateMessageReply) Reset() {
	*x = RegenerateMessageReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateMessageReply) ProtoMessage() {}

func (x *RegenerateMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateMessageReply.ProtoReflect.Descriptor instead.
func (*RegenerateMessageReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{30}
}

func (x *RegenerateMessageReply) GetNewMessage() *Message {
	if x != nil {
		return x.NewMessage
	}
	return nil
}

// 获取对话上下文
type GetConversationContextRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 对话ID
	MaxMessages    int32                  `protobuf:"varint,2,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`          // 最大消息数(可选)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationContextRequest) Reset() {
	*x = GetConversationContextRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationContextRequest) ProtoMessage() {}

func (x *GetConversationContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationContextRequest.ProtoReflect.Descriptor instead.
func (*GetConversationContextRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{31}
}

func (x *GetConversationContextRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *GetConversationContextRequest) GetMaxMessages() int32 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

type GetConversationContextReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *ConversationContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"` // 对话上下文
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationContextReply) Reset() {
	*x = GetConversationContextReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationContextReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationContextReply) ProtoMessage() {}

func (x *GetConversationContextReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationContextReply.ProtoReflect.Descriptor instead.
func (*GetConversationContextReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{32}
}

func (x *GetConversationContextReply) GetContext() *ConversationContext {
	if x != nil {
		return x.Context
	}
	return nil
}

// 更新对话上下文
type UpdateConversationContextRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 对话ID
	Context        *ConversationContext   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`                                      // 新的上下文
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateConversationContextRequest) Reset() {
	*x = UpdateConversationContextRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationContextRequest) ProtoMessage() {}

func (x *UpdateConversationContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationContextRequest.ProtoReflect.Descriptor instead.
func (*UpdateConversationContextRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateConversationContextRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *UpdateConversationContextRequest) GetContext() *ConversationContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type UpdateConversationContextReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationContextReply) Reset() {
	*x = UpdateConversationContextReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationContextReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationContextReply) ProtoMessage() {}

func (x *UpdateConversationContextReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationContextReply.ProtoReflect.Descriptor instead.
func (*UpdateConversationContextReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{34}
}

// 总结对话
type SummarizeConversationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 对话ID
	MaxMessages    int32                  `protobuf:"varint,2,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`          // 要总结的最大消息数(可选)
	SummaryStyle   string                 `protobuf:"bytes,3,opt,name=summary_style,json=summaryStyle,proto3" json:"summary_style,omitempty"`        // 总结风格(可选)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SummarizeConversationRequest) Reset() {
	*x = SummarizeConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeConversationRequest) ProtoMessage() {}

func (x *SummarizeConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeConversationRequest.ProtoReflect.Descriptor instead.
func (*SummarizeConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{35}
}

func (x *SummarizeConversationRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *SummarizeConversationRequest) GetMaxMessages() int32 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

func (x *SummarizeConversationRequest) GetSummaryStyle() string {
	if x != nil {
		return x.SummaryStyle
	}
	return ""
}

type SummarizeConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`                      // 对话总结
	KeyPoints     []string               `protobuf:"bytes,2,rep,name=key_points,json=keyPoints,proto3" json:"key_points,omitempty"` // 关键要点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeConversationReply) Reset() {
	*x = SummarizeConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeConversationReply) ProtoMessage() {}

func (x *SummarizeConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeConversationReply.ProtoReflect.Descriptor instead.
func (*SummarizeConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{36}
}

func (x *SummarizeConversationReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SummarizeConversationReply) GetKeyPoints() []string {
	if x != nil {
		return x.KeyPoints
	}
	return nil
}

// 清空对话历史
type ClearConversationHistoryRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConversationId     int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`               // 对话ID
	KeepSystemMessages bool                   `protobuf:"varint,2,opt,name=keep_system_messages,json=keepSystemMessages,proto3" json:"keep_system_messages,omitempty"` // 是否保留系统消息
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClearConversationHistoryRequest) Reset() {
	*x = ClearConversationHistoryRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearConversationHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationHistoryRequest) ProtoMessage() {}

func (x *ClearConversationHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationHistoryRequest.ProtoReflect.Descriptor instead.
func (*ClearConversationHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{37}
}

func (x *ClearConversationHistoryRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *ClearConversationHistoryRequest) GetKeepSystemMessages() bool {
	if x != nil {
		return x.KeepSystemMessages
	}
	return false
}

type ClearConversationHistoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearConversationHistoryReply) Reset() {
	*x = ClearConversationHistoryReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearConversationHistoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationHistoryReply) ProtoMessage() {}

func (x *ClearConversationHistoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationHistoryReply.ProtoReflect.Descriptor instead.
func (*ClearConversationHistoryReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{38}
}

// 设置对话记忆
type SetConversationMemoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 对话ID
	Memory         *ConversationMemory    `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`                                        // 记忆信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetConversationMemoryRequest) Reset() {
	*x = SetConversationMemoryRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMemoryRequest) ProtoMessage() {}

func (x *SetConversationMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMemoryRequest.ProtoReflect.Descriptor instead.
func (*SetConversationMemoryRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{39}
}

func (x *SetConversationMemoryRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *SetConversationMemoryRequest) GetMemory() *ConversationMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type SetConversationMemoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationMemoryReply) Reset() {
	*x = SetConversationMemoryReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMemoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMemoryReply) ProtoMessage() {}

func (x *SetConversationMemoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMemoryReply.ProtoReflect.Descriptor instead.
func (*SetConversationMemoryReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{40}
}

// 获取对话记忆
type GetConversationMemoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"` // 对话ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationMemoryRequest) Reset() {
	*x = GetConversationMemoryRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMemoryRequest) ProtoMessage() {}

func (x *GetConversationMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMemoryRequest.ProtoReflect.Descriptor instead.
func (*GetConversationMemoryRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{41}
}

func (x *GetConversationMemoryRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

type GetConversationMemoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memory        *ConversationMemory    `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"` // 记忆信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMemoryReply) Reset() {
	*x = GetConversationMemoryReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMemoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMemoryReply) ProtoMessage() {}

func (x *GetConversationMemoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMemoryReply.ProtoReflect.Descriptor instead.
func (*GetConversationMemoryReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{42}
}

func (x *GetConversationMemoryReply) GetMemory() *ConversationMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

// 获取对话统计
type GetConversationStatsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ConversationId       int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`                     // 对话ID
	IncludeCostBreakdown bool                   `protobuf:"varint,2,opt,name=include_cost_breakdown,json=includeCostBreakdown,proto3" json:"include_cost_breakdown,omitempty"` // 是否包含成本明细
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetConversationStatsRequest) Reset() {
	*x = GetConversationStatsRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationStatsRequest) ProtoMessage() {}

func (x *GetConversationStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationStatsRequest.ProtoReflect.Descriptor instead.
func (*GetConversationStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{43}
}

func (x *GetConversationStatsRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *GetConversationStatsRequest) GetIncludeCostBreakdown() bool {
	if x != nil {
		return x.IncludeCostBreakdown
	}
	return false
}

type GetConversationStatsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *ConversationStats     `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`                                                                                                                  // 统计信息
	CostBreakdown map[string]float64     `protobuf:"bytes,2,rep,name=cost_breakdown,json=costBreakdown,proto3" json:"cost_breakdown,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // 成本明细
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationStatsReply) Reset() {
	*x = GetConversationStatsReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationStatsReply) ProtoMessage() {}

func (x *GetConversationStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationStatsReply.ProtoReflect.Descriptor instead.
func (*GetConversationStatsReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{44}
}

func (x *GetConversationStatsReply) GetStats() *ConversationStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetConversationStatsReply) GetCostBreakdown() map[string]float64 {
	if x != nil {
		return x.CostBreakdown
	}
	return nil
}

// 导出对话
type ExportConversationRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConversationId     int64                  `protobuf:"varint,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`             // 对话ID
	Format             ExportFormat           `protobuf:"varint,2,opt,name=format,proto3,enum=api.ai.v1.ExportFormat" json:"format,omitempty"`                       // 导出格式
	IncludeAttachments bool                   `protobuf:"varint,3,opt,name=include_attachments,json=includeAttachments,proto3" json:"include_attachments,omitempty"` // 是否包含附件
	IncludeMetadata    bool                   `protobuf:"varint,4,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`          // 是否包含元数据
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExportConversationRequest) Reset() {
	*x = ExportConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConversationRequest) ProtoMessage() {}

func (x *ExportConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConversationRequest.ProtoReflect.Descriptor instead.
func (*ExportConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{45}
}

func (x *ExportConversationRequest) GetConversationId() int64 {
	if x != nil {
		return x.ConversationId
	}
	return 0
}

func (x *ExportConversationRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportConversationRequest) GetIncludeAttachments() bool {
	if x != nil {
		return x.IncludeAttachments
	}
	return false
}

func (x *ExportConversationRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

type ExportConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                         // 导出数据
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                 // 建议文件名
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"` // MIME类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportConversationReply) Reset() {
	*x = ExportConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConversationReply) ProtoMessage() {}

func (x *ExportConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConversationReply.ProtoReflect.Descriptor instead.
func (*ExportConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{46}
}

func (x *ExportConversationReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExportConversationReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ExportConversationReply) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// 导入对话
type ImportConversationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                            // 用户ID
	Data            []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                               // 导入数据
	Format          ExportFormat           `protobuf:"varint,3,opt,name=format,proto3,enum=api.ai.v1.ExportFormat" json:"format,omitempty"`              // 数据格式
	MergeDuplicates bool                   `protobuf:"varint,4,opt,name=merge_duplicates,json=mergeDuplicates,proto3" json:"merge_duplicates,omitempty"` // 是否合并重复对话
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImportConversationRequest) Reset() {
	*x = ImportConversationRequest{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportConversationRequest) ProtoMessage() {}

func (x *ImportConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportConversationRequest.ProtoReflect.Descriptor instead.
func (*ImportConversationRequest) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{47}
}

func (x *ImportConversationRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ImportConversationRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ImportConversationRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ImportConversationRequest) GetMergeDuplicates() bool {
	if x != nil {
		return x.MergeDuplicates
	}
	return false
}

type ImportConversationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*ConversationInfo    `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`                       // 导入的对话列表
	ImportedCount int32                  `protobuf:"varint,2,opt,name=imported_count,json=importedCount,proto3" json:"imported_count,omitempty"` // 导入数量
	SkippedCount  int32                  `protobuf:"varint,3,opt,name=skipped_count,json=skippedCount,proto3" json:"skipped_count,omitempty"`    // 跳过数量
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`                                 // 警告信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportConversationReply) Reset() {
	*x = ImportConversationReply{}
	mi := &file_api_ai_v1_conversation_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportConversationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportConversationReply) ProtoMessage() {}

func (x *ImportConversationReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_ai_v1_conversation_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportConversationReply.ProtoReflect.Descriptor instead.
func (*ImportConversationReply) Descriptor() ([]byte, []int) {
	return file_api_ai_v1_conversation_proto_rawDescGZIP(), []int{48}
}

func (x *ImportConversationReply) GetConversations() []*ConversationInfo {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *ImportConversationReply) GetImportedCount() int32 {
	if x != nil {
		return x.ImportedCount
	}
	return 0
}

func (x *ImportConversationReply) GetSkippedCount() int32 {
	if x != nil {
		return x.SkippedCount
	}
	return 0
}

func (x *ImportConversationReply) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

var File_api_ai_v1_conversation_proto protoreflect.FileDescriptor

const file_api_ai_v1_conversation_proto_rawDesc = "" +
	"\n" +
	"\x1capi/ai/v1/conversation.proto\x12\tapi.ai.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xc0\x06\n" +
	"\x10ConversationInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\x12#\n" +
	"\rsystem_prompt\x18\x05 \x01(\tR\fsystemPrompt\x12?\n" +
	"\x06config\x18\x06 \x03(\v2'.api.ai.v1.ConversationInfo.ConfigEntryR\x06config\x125\n" +
	"\x06status\x18\a \x01(\x0e2\x1d.api.ai.v1.ConversationStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12@\n" +
	"\x0elast_active_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\x125\n" +
	"\x06memory\x18\v \x01(\v2\x1d.api.ai.v1.ConversationMemoryR\x06memory\x128\n" +
	"\acontext\x18\f \x01(\v2\x1e.api.ai.v1.ConversationContextR\acontext\x122\n" +
	"\x05stats\x18\r \x01(\v2\x1c.api.ai.v1.ConversationStatsR\x05stats\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x0f \x03(\tR\x04tags\x12\x1a\n" +
	"\bpriority\x18\x10 \x01(\x05R\bpriority\x12G\n" +
	"\x12auto_archive_after\x18\x11 \x01(\v2\x19.google.protobuf.DurationR\x10autoArchiveAfter\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xff\x02\n" +
	"\x12ConversationMemory\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x1d\n" +
	"\n" +
	"key_points\x18\x02 \x03(\tR\tkeyPoints\x12]\n" +
	"\x10user_preferences\x18\x03 \x03(\v22.api.ai.v1.ConversationMemory.UserPreferencesEntryR\x0fuserPreferences\x12'\n" +
	"\x0fimportant_facts\x18\x04 \x03(\tR\x0eimportantFacts\x12=\n" +
	"\flast_updated\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12%\n" +
	"\x0ememory_version\x18\x06 \x01(\x05R\rmemoryVersion\x1aB\n" +
	"\x14UserPreferencesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x02\n" +
	"\x13ConversationContext\x12;\n" +
	"\x0frecent_messages\x18\x01 \x03(\v2\x12.api.ai.v1.MessageR\x0erecentMessages\x12.\n" +
	"\x13context_window_size\x18\x02 \x01(\x05R\x11contextWindowSize\x120\n" +
	"\x14max_context_messages\x18\x03 \x01(\x05R\x12maxContextMessages\x12%\n" +
	"\x0eauto_summarize\x18\x04 \x01(\bR\rautoSummarize\x12+\n" +
	"\x11summary_threshold\x18\x05 \x01(\x05R\x10summaryThreshold\x12#\n" +
	"\rcurrent_topic\x18\x06 \x01(\tR\fcurrentTopic\x12!\n" +
	"\factive_tools\x18\a \x03(\tR\vactiveTools\"\xde\x03\n" +
	"\x11ConversationStats\x12#\n" +
	"\rmessage_count\x18\x01 \x01(\x03R\fmessageCount\x12,\n" +
	"\x12user_message_count\x18\x02 \x01(\x03R\x10userMessageCount\x126\n" +
	"\x17assistant_message_count\x18\x03 \x01(\x03R\x15assistantMessageCount\x12,\n" +
	"\x12total_input_tokens\x18\x04 \x01(\x03R\x10totalInputTokens\x12.\n" +
	"\x13total_output_tokens\x18\x05 \x01(\x03R\x11totalOutputTokens\x12&\n" +
	"\x0ftool_call_count\x18\x06 \x01(\x03R\rtoolCallCount\x12@\n" +
	"\x0etotal_duration\x18\a \x01(\v2\x19.google.protobuf.DurationR\rtotalDuration\x122\n" +
	"\x15average_response_time\x18\b \x01(\x01R\x13averageResponseTime\x12B\n" +
	"\x0flast_message_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\rlastMessageAt\"\xbc\x05\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\x03R\x0econversationId\x12*\n" +
	"\x04role\x18\x03 \x01(\x0e2\x16.api.ai.v1.MessageRoleR\x04role\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x122\n" +
	"\n" +
	"tool_calls\x18\x05 \x03(\v2\x13.api.ai.v1.ToolCallR\ttoolCalls\x12<\n" +
	"\bmetadata\x18\x06 \x03(\v2 .api.ai.v1.Message.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x120\n" +
	"\x06status\x18\b \x01(\x0e2\x18.api.ai.v1.MessageStatusR\x06status\x12>\n" +
	"\vattachments\x18\t \x03(\v2\x1c.api.ai.v1.MessageAttachmentR\vattachments\x123\n" +
	"\ametrics\x18\n" +
	" \x01(\v2\x19.api.ai.v1.MessageMetricsR\ametrics\x12*\n" +
	"\x11parent_message_id\x18\v \x01(\tR\x0fparentMessageId\x12\x1b\n" +
	"\tis_edited\x18\f \x01(\bR\bisEdited\x127\n" +
	"\tedited_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\beditedAt\x12\x1f\n" +
	"\vedit_reason\x18\x0e \x01(\tR\n" +
	"editReason\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x02\n" +
	"\x11MessageAttachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12-\n" +
	"\x04type\x18\x06 \x01(\x0e2\x19.api.ai.v1.AttachmentTypeR\x04type\x12F\n" +
	"\bmetadata\x18\a \x03(\v2*.api.ai.v1.MessageAttachment.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x01\n" +
	"\x0eMessageMetrics\x12!\n" +
	"\finput_tokens\x18\x01 \x01(\x05R\vinputTokens\x12#\n" +
	"\routput_tokens\x18\x02 \x01(\x05R\foutputTokens\x12#\n" +
	"\rresponse_time\x18\x03 \x01(\x01R\fresponseTime\x12\x12\n" +
	"\x04cost\x18\x04 \x01(\x01R\x04cost\x12\x1d\n" +
	"\n" +
	"model_used\x18\x05 \x01(\tR\tmodelUsed\"\xd6\x03\n" +
	"\bToolCall\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\targuments\x18\x03 \x01(\tR\targuments\x12\x16\n" +
	"\x06result\x18\x04 \x01(\tR\x06result\x121\n" +
	"\x06status\x18\x05 \x01(\x0e2\x19.api.ai.v1.ToolCallStatusR\x06status\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12@\n" +
	"\x0eexecution_time\x18\b \x01(\v2\x19.google.protobuf.DurationR\rexecutionTime\x12=\n" +
	"\bmetadata\x18\t \x03(\v2!.api.ai.v1.ToolCall.MetadataEntryR\bmetadata\x12\x1f\n" +
	"\vretry_count\x18\n" +
	" \x01(\x05R\n" +
	"retryCount\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x03\n" +
	"\x19CreateConversationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"model_name\x18\x03 \x01(\tR\tmodelName\x12#\n" +
	"\rsystem_prompt\x18\x04 \x01(\tR\fsystemPrompt\x12H\n" +
	"\x06config\x18\x05 \x03(\v20.api.ai.v1.CreateConversationRequest.ConfigEntryR\x06config\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x12D\n" +
	"\x0einitial_memory\x18\t \x01(\v2\x1d.api.ai.v1.ConversationMemoryR\rinitialMemory\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x17CreateConversationReply\x12?\n" +
	"\fconversation\x18\x01 \x01(\v2\x1b.api.ai.v1.ConversationInfoR\fconversation\"\x9d\x01\n" +
	"\x16GetConversationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12'\n" +
	"\x0finclude_context\x18\x02 \x01(\bR\x0eincludeContext\x12%\n" +
	"\x0einclude_memory\x18\x03 \x01(\bR\rincludeMemory\x12#\n" +
	"\rinclude_stats\x18\x04 \x01(\bR\fincludeStats\"W\n" +
	"\x14GetConversationReply\x12?\n" +
	"\fconversation\x18\x01 \x01(\v2\x1b.api.ai.v1.ConversationInfoR\fconversation\"\xbd\x02\n" +
	"\x19UpdateConversationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12#\n" +
	"\rsystem_prompt\x18\x03 \x01(\tR\fsystemPrompt\x12H\n" +
	"\x06config\x18\x04 \x03(\v20.api.ai.v1.UpdateConversationRequest.ConfigEntryR\x06config\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x17UpdateConversationReply\x12?\n" +
	"\fconversation\x18\x01 \x01(\v2\x1b.api.ai.v1.ConversationInfoR\fconversation\"L\n" +
	"\x19DeleteConversationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1f\n" +
	"\vhard_delete\x18\x02 \x01(\bR\n" +
	"hardDelete\"\x19\n" +
	"\x17DeleteConversationReply\"\xff\x01\n" +
	"\x18ListConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x125\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1d.api.ai.v1.ConversationStatusR\x06status\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x17\n" +
	"\asort_by\x18\a \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\b \x01(\bR\bsortDesc\"\xa2\x01\n" +
	"\x16ListConversationsReply\x12A\n" +
	"\rconversations\x18\x01 \x03(\v2\x1b.api.ai.v1.ConversationInfoR\rconversations\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"D\n" +
	"\x1aArchiveConversationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x1a\n" +
	"\x18ArchiveConversationReply\",\n" +
	"\x1aRestoreConversationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"[\n" +
	"\x18RestoreConversationReply\x12?\n" +
	"\fconversation\x18\x01 \x01(\v2\x1b.api.ai.v1.ConversationInfoR\fconversation\"\xd1\x03\n" +
	"\x12SendMessageRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12>\n" +
	"\vattachments\x18\x03 \x03(\v2\x1c.api.ai.v1.MessageAttachmentR\vattachments\x12!\n" +
	"\fenable_tools\x18\x04 \x01(\bR\venableTools\x12#\n" +
	"\rallowed_tools\x18\x05 \x03(\tR\fallowedTools\x12D\n" +
	"\aoptions\x18\x06 \x03(\v2*.api.ai.v1.SendMessageRequest.OptionsEntryR\aoptions\x12*\n" +
	"\x11parent_message_id\x18\a \x01(\tR\x0fparentMessageId\x12\x1d\n" +
	"\n" +
	"use_memory\x18\b \x01(\bR\tuseMemory\x12#\n" +
	"\rupdate_memory\x18\t \x01(\bR\fupdateMemory\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x01\n" +
	"\x10SendMessageReply\x125\n" +
	"\fuser_message\x18\x01 \x01(\v2\x12.api.ai.v1.MessageR\vuserMessage\x12?\n" +
	"\x11assistant_message\x18\x02 \x01(\v2\x12.api.ai.v1.MessageR\x10assistantMessage\"\x9e\x01\n" +
	"\x16SendMessageStreamReply\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\tR\x05chunk\x12\x1f\n" +
	"\vis_complete\x18\x02 \x01(\bR\n" +
	"isComplete\x127\n" +
	"\rfinal_message\x18\x03 \x01(\v2\x12.api.ai.v1.MessageR\ffinalMessage\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xee\x02\n" +
	"\x12GetMessagesRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12,\n" +
	"\x12include_tool_calls\x18\x04 \x01(\bR\x10includeToolCalls\x12/\n" +
	"\x13include_attachments\x18\x05 \x01(\bR\x12includeAttachments\x12'\n" +
	"\x0finclude_metrics\x18\x06 \x01(\bR\x0eincludeMetrics\x127\n" +
	"\vrole_filter\x18\a \x01(\x0e2\x16.api.ai.v1.MessageRoleR\n" +
	"roleFilter\x12=\n" +
	"\rstatus_filter\x18\b \x01(\x0e2\x18.api.ai.v1.MessageStatusR\fstatusFilter\"\x89\x01\n" +
	"\x10GetMessagesReply\x12.\n" +
	"\bmessages\x18\x01 \x03(\v2\x12.api.ai.v1.MessageR\bmessages\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"X\n" +
	"\x14DeleteMessageRequest\x12\x1f\n" +
	"\vmessage_ids\x18\x01 \x03(\x03R\n" +
	"messageIds\x12\x1f\n" +
	"\vhard_delete\x18\x02 \x01(\bR\n" +
	"hardDelete\"\x14\n" +
	"\x12DeleteMessageReply\"\xc1\x01\n" +
	"\x18RegenerateMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\x03R\tmessageId\x12J\n" +
	"\aoptions\x18\x02 \x03(\v20.api.ai.v1.RegenerateMessageRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"M\n" +
	"\x16RegenerateMessageReply\x123\n" +
	"\vnew_message\x18\x01 \x01(\v2\x12.api.ai.v1.MessageR\n" +
	"newMessage\"k\n" +
	"\x1dGetConversationContextRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x12!\n" +
	"\fmax_messages\x18\x02 \x01(\x05R\vmaxMessages\"W\n" +
	"\x1bGetConversationContextReply\x128\n" +
	"\acontext\x18\x01 \x01(\v2\x1e.api.ai.v1.ConversationContextR\acontext\"\x85\x01\n" +
	" UpdateConversationContextRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x128\n" +
	"\acontext\x18\x02 \x01(\v2\x1e.api.ai.v1.ConversationContextR\acontext\" \n" +
	"\x1eUpdateConversationContextReply\"\x8f\x01\n" +
	"\x1cSummarizeConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x12!\n" +
	"\fmax_messages\x18\x02 \x01(\x05R\vmaxMessages\x12#\n" +
	"\rsummary_style\x18\x03 \x01(\tR\fsummaryStyle\"U\n" +
	"\x1aSummarizeConversationReply\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x1d\n" +
	"\n" +
	"key_points\x18\x02 \x03(\tR\tkeyPoints\"|\n" +
	"\x1fClearConversationHistoryRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x120\n" +
	"\x14keep_system_messages\x18\x02 \x01(\bR\x12keepSystemMessages\"\x1f\n" +
	"\x1dClearConversationHistoryReply\"~\n" +
	"\x1cSetConversationMemoryRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x125\n" +
	"\x06memory\x18\x02 \x01(\v2\x1d.api.ai.v1.ConversationMemoryR\x06memory\"\x1c\n" +
	"\x1aSetConversationMemoryReply\"G\n" +
	"\x1cGetConversationMemoryRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\"S\n" +
	"\x1aGetConversationMemoryReply\x125\n" +
	"\x06memory\x18\x01 \x01(\v2\x1d.api.ai.v1.ConversationMemoryR\x06memory\"|\n" +
	"\x1bGetConversationStatsRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x124\n" +
	"\x16include_cost_breakdown\x18\x02 \x01(\bR\x14includeCostBreakdown\"\xf1\x01\n" +
	"\x19GetConversationStatsReply\x122\n" +
	"\x05stats\x18\x01 \x01(\v2\x1c.api.ai.v1.ConversationStatsR\x05stats\x12^\n" +
	"\x0ecost_breakdown\x18\x02 \x03(\v27.api.ai.v1.GetConversationStatsReply.CostBreakdownEntryR\rcostBreakdown\x1a@\n" +
	"\x12CostBreakdownEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xd1\x01\n" +
	"\x19ExportConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\x03R\x0econversationId\x12/\n" +
	"\x06format\x18\x02 \x01(\x0e2\x17.api.ai.v1.ExportFormatR\x06format\x12/\n" +
	"\x13include_attachments\x18\x03 \x01(\bR\x12includeAttachments\x12)\n" +
	"\x10include_metadata\x18\x04 \x01(\bR\x0fincludeMetadata\"f\n" +
	"\x17ExportConversationReply\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\"\xa4\x01\n" +
	"\x19ImportConversationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12/\n" +
	"\x06format\x18\x03 \x01(\x0e2\x17.api.ai.v1.ExportFormatR\x06format\x12)\n" +
	"\x10merge_duplicates\x18\x04 \x01(\bR\x0fmergeDuplicates\"\xc4\x01\n" +
	"\x17ImportConversationReply\x12A\n" +
	"\rconversations\x18\x01 \x03(\v2\x1b.api.ai.v1.ConversationInfoR\rconversations\x12%\n" +
	"\x0eimported_count\x18\x02 \x01(\x05R\rimportedCount\x12#\n" +
	"\rskipped_count\x18\x03 \x01(\x05R\fskippedCount\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings*\xbc\x01\n" +
	"\x12ConversationStatus\x12#\n" +
	"\x1fCONVERSATION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCONVERSATION_STATUS_ACTIVE\x10\x01\x12 \n" +
	"\x1cCONVERSATION_STATUS_ARCHIVED\x10\x02\x12\x1f\n" +
	"\x1bCONVERSATION_STATUS_DELETED\x10\x03\x12\x1e\n" +
	"\x1aCONVERSATION_STATUS_PAUSED\x10\x04*\x8e\x01\n" +
	"\vMessageRole\x12\x1c\n" +
	"\x18MESSAGE_ROLE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MESSAGE_ROLE_USER\x10\x01\x12\x1a\n" +
	"\x16MESSAGE_ROLE_ASSISTANT\x10\x02\x12\x17\n" +
	"\x13MESSAGE_ROLE_SYSTEM\x10\x03\x12\x15\n" +
	"\x11MESSAGE_ROLE_TOOL\x10\x04*\xbf\x01\n" +
	"\rMessageStatus\x12\x1e\n" +
	"\x1aMESSAGE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16MESSAGE_STATUS_PENDING\x10\x01\x12\x1d\n" +
	"\x19MESSAGE_STATUS_PROCESSING\x10\x02\x12\x1c\n" +
	"\x18MESSAGE_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15MESSAGE_STATUS_FAILED\x10\x04\x12\x1a\n" +
	"\x16MESSAGE_STATUS_DELETED\x10\x05*\xba\x01\n" +
	"\x0eAttachmentType\x12\x1f\n" +
	"\x1bATTACHMENT_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_IMAGE\x10\x01\x12\x1c\n" +
	"\x18ATTACHMENT_TYPE_DOCUMENT\x10\x02\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_AUDIO\x10\x03\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_VIDEO\x10\x04\x12\x18\n" +
	"\x14ATTACHMENT_TYPE_CODE\x10\x05*\xe7\x01\n" +
	"\x0eToolCallStatus\x12 \n" +
	"\x1cTOOL_CALL_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18TOOL_CALL_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18TOOL_CALL_STATUS_RUNNING\x10\x02\x12\x1c\n" +
	"\x18TOOL_CALL_STATUS_SUCCESS\x10\x03\x12\x1b\n" +
	"\x17TOOL_CALL_STATUS_FAILED\x10\x04\x12\x1c\n" +
	"\x18TOOL_CALL_STATUS_TIMEOUT\x10\x05\x12\x1e\n" +
	"\x1aTOOL_CALL_STATUS_CANCELLED\x10\x06*\x90\x01\n" +
	"\fExportFormat\x12\x1d\n" +
	"\x19EXPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EXPORT_FORMAT_JSON\x10\x01\x12\x1a\n" +
	"\x16EXPORT_FORMAT_MARKDOWN\x10\x02\x12\x15\n" +
	"\x11EXPORT_FORMAT_PDF\x10\x03\x12\x16\n" +
	"\x12EXPORT_FORMAT_DOCX\x10\x042\xf9\x0f\n" +
	"\fConversation\x12^\n" +
	"\x12CreateConversation\x12$.api.ai.v1.CreateConversationRequest\x1a\".api.ai.v1.CreateConversationReply\x12U\n" +
	"\x0fGetConversation\x12!.api.ai.v1.GetConversationRequest\x1a\x1f.api.ai.v1.GetConversationReply\x12^\n" +
	"\x12UpdateConversation\x12$.api.ai.v1.UpdateConversationRequest\x1a\".api.ai.v1.UpdateConversationReply\x12^\n" +
	"\x12DeleteConversation\x12$.api.ai.v1.DeleteConversationRequest\x1a\".api.ai.v1.DeleteConversationReply\x12[\n" +
	"\x11ListConversations\x12#.api.ai.v1.ListConversationsRequest\x1a!.api.ai.v1.ListConversationsReply\x12a\n" +
	"\x13ArchiveConversation\x12%.api.ai.v1.ArchiveConversationRequest\x1a#.api.ai.v1.ArchiveConversationReply\x12a\n" +
	"\x13RestoreConversation\x12%.api.ai.v1.RestoreConversationRequest\x1a#.api.ai.v1.RestoreConversationReply\x12I\n" +
	"\vSendMessage\x12\x1d.api.ai.v1.SendMessageRequest\x1a\x1b.api.ai.v1.SendMessageReply\x12W\n" +
	"\x11SendStreamMessage\x12\x1d.api.ai.v1.SendMessageRequest\x1a!.api.ai.v1.SendMessageStreamReply0\x01\x12I\n" +
	"\vGetMessages\x12\x1d.api.ai.v1.GetMessagesRequest\x1a\x1b.api.ai.v1.GetMessagesReply\x12O\n" +
	"\rDeleteMessage\x12\x1f.api.ai.v1.DeleteMessageRequest\x1a\x1d.api.ai.v1.DeleteMessageReply\x12[\n" +
	"\x11RegenerateMessage\x12#.api.ai.v1.RegenerateMessageRequest\x1a!.api.ai.v1.RegenerateMessageReply\x12j\n" +
	"\x16GetConversationContext\x12(.api.ai.v1.GetConversationContextRequest\x1a&.api.ai.v1.GetConversationContextReply\x12s\n" +
	"\x19UpdateConversationContext\x12+.api.ai.v1.UpdateConversationContextRequest\x1a).api.ai.v1.UpdateConversationContextReply\x12g\n" +
	"\x15SummarizeConversation\x12'.api.ai.v1.SummarizeConversationRequest\x1a%.api.ai.v1.SummarizeConversationReply\x12p\n" +
	"\x18ClearConversationHistory\x12*.api.ai.v1.ClearConversationHistoryRequest\x1a(.api.ai.v1.ClearConversationHistoryReply\x12g\n" +
	"\x15SetConversationMemory\x12'.api.ai.v1.SetConversationMemoryRequest\x1a%.api.ai.v1.SetConversationMemoryReply\x12g\n" +
	"\x15GetConversationMemory\x12'.api.ai.v1.GetConversationMemoryRequest\x1a%.api.ai.v1.GetConversationMemoryReply\x12d\n" +
	"\x14GetConversationStats\x12&.api.ai.v1.GetConversationStatsRequest\x1a$.api.ai.v1.GetConversationStatsReply\x12^\n" +
	"\x12ExportConversation\x12$.api.ai.v1.ExportConversationRequest\x1a\".api.ai.v1.ExportConversationReply\x12^\n" +
	"\x12ImportConversation\x12$.api.ai.v1.ImportConversationRequest\x1a\".api.ai.v1.ImportConversationReplyBO\n" +
	"\x1ecom.oldwei.universal.api.ai.v1B\x13ConversationProtoV1P\x01Z\x16universal/api/ai/v1;v1b\x06proto3"

var (
	file_api_ai_v1_conversation_proto_rawDescOnce sync.Once
	file_api_ai_v1_conversation_proto_rawDescData []byte
)

func file_api_ai_v1_conversation_proto_rawDescGZIP() []byte {
	file_api_ai_v1_conversation_proto_rawDescOnce.Do(func() {
		file_api_ai_v1_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ai_v1_conversation_proto_rawDesc), len(file_api_ai_v1_conversation_proto_rawDesc)))
	})
	return file_api_ai_v1_conversation_proto_rawDescData
}

var file_api_ai_v1_conversation_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_ai_v1_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_api_ai_v1_conversation_proto_goTypes = []any{
	(ConversationStatus)(0),                  // 0: api.ai.v1.ConversationStatus
	(MessageRole)(0),                         // 1: api.ai.v1.MessageRole
	(MessageStatus)(0),                       // 2: api.ai.v1.MessageStatus
	(AttachmentType)(0),                      // 3: api.ai.v1.AttachmentType
	(ToolCallStatus)(0),                      // 4: api.ai.v1.ToolCallStatus
	(ExportFormat)(0),                        // 5: api.ai.v1.ExportFormat
	(*ConversationInfo)(nil),                 // 6: api.ai.v1.ConversationInfo
	(*ConversationMemory)(nil),               // 7: api.ai.v1.ConversationMemory
	(*ConversationContext)(nil),              // 8: api.ai.v1.ConversationContext
	(*ConversationStats)(nil),                // 9: api.ai.v1.ConversationStats
	(*Message)(nil),                          // 10: api.ai.v1.Message
	(*MessageAttachment)(nil),                // 11: api.ai.v1.MessageAttachment
	(*MessageMetrics)(nil),                   // 12: api.ai.v1.MessageMetrics
	(*ToolCall)(nil),                         // 13: api.ai.v1.ToolCall
	(*CreateConversationRequest)(nil),        // 14: api.ai.v1.CreateConversationRequest
	(*CreateConversationReply)(nil),          // 15: api.ai.v1.CreateConversationReply
	(*GetConversationRequest)(nil),           // 16: api.ai.v1.GetConversationRequest
	(*GetConversationReply)(nil),             // 17: api.ai.v1.GetConversationReply
	(*UpdateConversationRequest)(nil),        // 18: api.ai.v1.UpdateConversationRequest
	(*UpdateConversationReply)(nil),          // 19: api.ai.v1.UpdateConversationReply
	(*DeleteConversationRequest)(nil),        // 20: api.ai.v1.DeleteConversationRequest
	(*DeleteConversationReply)(nil),          // 21: api.ai.v1.DeleteConversationReply
	(*ListConversationsRequest)(nil),         // 22: api.ai.v1.ListConversationsRequest
	(*ListConversationsReply)(nil),           // 23: api.ai.v1.ListConversationsReply
	(*ArchiveConversationRequest)(nil),       // 24: api.ai.v1.ArchiveConversationRequest
	(*ArchiveConversationReply)(nil),         // 25: api.ai.v1.ArchiveConversationReply
	(*RestoreConversationRequest)(nil),       // 26: api.ai.v1.RestoreConversationRequest
	(*RestoreConversationReply)(nil),         // 27: api.ai.v1.RestoreConversationReply
	(*SendMessageRequest)(nil),               // 28: api.ai.v1.SendMessageRequest
	(*SendMessageReply)(nil),                 // 29: api.ai.v1.SendMessageReply
	(*SendMessageStreamReply)(nil),           // 30: api.ai.v1.SendMessageStreamReply
	(*GetMessagesRequest)(nil),               // 31: api.ai.v1.GetMessagesRequest
	(*GetMessagesReply)(nil),                 // 32: api.ai.v1.GetMessagesReply
	(*DeleteMessageRequest)(nil),             // 33: api.ai.v1.DeleteMessageRequest
	(*DeleteMessageReply)(nil),               // 34: api.ai.v1.DeleteMessageReply
	(*RegenerateMessageRequest)(nil),         // 35: api.ai.v1.RegenerateMessageRequest
	(*RegenerateMessageReply)(nil),           // 36: api.ai.v1.RegenerateMessageReply
	(*GetConversationContextRequest)(nil),    // 37: api.ai.v1.GetConversationContextRequest
	(*GetConversationContextReply)(nil),      // 38: api.ai.v1.GetConversationContextReply
	(*UpdateConversationContextRequest)(nil), // 39: api.ai.v1.UpdateConversationContextRequest
	(*UpdateConversationContextReply)(nil),   // 40: api.ai.v1.UpdateConversationContextReply
	(*SummarizeConversationRequest)(nil),     // 41: api.ai.v1.SummarizeConversationRequest
	(*SummarizeConversationReply)(nil),       // 42: api.ai.v1.SummarizeConversationReply
	(*ClearConversationHistoryRequest)(nil),  // 43: api.ai.v1.ClearConversationHistoryRequest
	(*ClearConversationHistoryReply)(nil),    // 44: api.ai.v1.ClearConversationHistoryReply
	(*SetConversationMemoryRequest)(nil),     // 45: api.ai.v1.SetConversationMemoryRequest
	(*SetConversationMemoryReply)(nil),       // 46: api.ai.v1.SetConversationMemoryReply
	(*GetConversationMemoryRequest)(nil),     // 47: api.ai.v1.GetConversationMemoryRequest
	(*GetConversationMemoryReply)(nil),       // 48: api.ai.v1.GetConversationMemoryReply
	(*GetConversationStatsRequest)(nil),      // 49: api.ai.v1.GetConversationStatsRequest
	(*GetConversationStatsReply)(nil),        // 50: api.ai.v1.GetConversationStatsReply
	(*ExportConversationRequest)(nil),        // 51: api.ai.v1.ExportConversationRequest
	(*ExportConversationReply)(nil),          // 52: api.ai.v1.ExportConversationReply
	(*ImportConversationRequest)(nil),        // 53: api.ai.v1.ImportConversationRequest
	(*ImportConversationReply)(nil),          // 54: api.ai.v1.ImportConversationReply
	nil,                                      // 55: api.ai.v1.ConversationInfo.ConfigEntry
	nil,                                      // 56: api.ai.v1.ConversationMemory.UserPreferencesEntry
	nil,                                      // 57: api.ai.v1.Message.MetadataEntry
	nil,                                      // 58: api.ai.v1.MessageAttachment.MetadataEntry
	nil,                                      // 59: api.ai.v1.ToolCall.MetadataEntry
	nil,                                      // 60: api.ai.v1.CreateConversationRequest.ConfigEntry
	nil,                                      // 61: api.ai.v1.UpdateConversationRequest.ConfigEntry
	nil,                                      // 62: api.ai.v1.SendMessageRequest.OptionsEntry
	nil,                                      // 63: api.ai.v1.RegenerateMessageRequest.OptionsEntry
	nil,                                      // 64: api.ai.v1.GetConversationStatsReply.CostBreakdownEntry
	(*timestamppb.Timestamp)(nil),            // 65: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),              // 66: google.protobuf.Duration
}
var file_api_ai_v1_conversation_proto_depIdxs = []int32{
	55, // 0: api.ai.v1.ConversationInfo.config:type_name -> api.ai.v1.ConversationInfo.ConfigEntry
	0,  // 1: api.ai.v1.ConversationInfo.status:type_name -> api.ai.v1.ConversationStatus
	65, // 2: api.ai.v1.ConversationInfo.created_at:type_name -> google.protobuf.Timestamp
	65, // 3: api.ai.v1.ConversationInfo.updated_at:type_name -> google.protobuf.Timestamp
	65, // 4: api.ai.v1.ConversationInfo.last_active_at:type_name -> google.protobuf.Timestamp
	7,  // 5: api.ai.v1.ConversationInfo.memory:type_name -> api.ai.v1.ConversationMemory
	8,  // 6: api.ai.v1.ConversationInfo.context:type_name -> api.ai.v1.ConversationContext
	9,  // 7: api.ai.v1.ConversationInfo.stats:type_name -> api.ai.v1.ConversationStats
	66, // 8: api.ai.v1.ConversationInfo.auto_archive_after:type_name -> google.protobuf.Duration
	56, // 9: api.ai.v1.ConversationMemory.user_preferences:type_name -> api.ai.v1.ConversationMemory.UserPreferencesEntry
	65, // 10: api.ai.v1.ConversationMemory.last_updated:type_name -> google.protobuf.Timestamp
	10, // 11: api.ai.v1.ConversationContext.recent_messages:type_name -> api.ai.v1.Message
	66, // 12: api.ai.v1.ConversationStats.total_duration:type_name -> google.protobuf.Duration
	65, // 13: api.ai.v1.ConversationStats.last_message_at:type_name -> google.protobuf.Timestamp
	1,  // 14: api.ai.v1.Message.role:type_name -> api.ai.v1.MessageRole
	13, // 15: api.ai.v1.Message.tool_calls:type_name -> api.ai.v1.ToolCall
	57, // 16: api.ai.v1.Message.metadata:type_name -> api.ai.v1.Message.MetadataEntry
	65, // 17: api.ai.v1.Message.created_at:type_name -> google.protobuf.Timestamp
	2,  // 18: api.ai.v1.Message.status:type_name -> api.ai.v1.MessageStatus
	11, // 19: api.ai.v1.Message.attachments:type_name -> api.ai.v1.MessageAttachment
	12, // 20: api.ai.v1.Message.metrics:type_name -> api.ai.v1.MessageMetrics
	65, // 21: api.ai.v1.Message.edited_at:type_name -> google.protobuf.Timestamp
	3,  // 22: api.ai.v1.MessageAttachment.type:type_name -> api.ai.v1.AttachmentType
	58, // 23: api.ai.v1.MessageAttachment.metadata:type_name -> api.ai.v1.MessageAttachment.MetadataEntry
	4,  // 24: api.ai.v1.ToolCall.status:type_name -> api.ai.v1.ToolCallStatus
	65, // 25: api.ai.v1.ToolCall.created_at:type_name -> google.protobuf.Timestamp
	66, // 26: api.ai.v1.ToolCall.execution_time:type_name -> google.protobuf.Duration
	59, // 27: api.ai.v1.ToolCall.metadata:type_name -> api.ai.v1.ToolCall.MetadataEntry
	60, // 28: api.ai.v1.CreateConversationRequest.config:type_name -> api.ai.v1.CreateConversationRequest.ConfigEntry
	7,  // 29: api.ai.v1.CreateConversationRequest.initial_memory:type_name -> api.ai.v1.ConversationMemory
	6,  // 30: api.ai.v1.CreateConversationReply.conversation:type_name -> api.ai.v1.ConversationInfo
	6,  // 31: api.ai.v1.GetConversationReply.conversation:type_name -> api.ai.v1.ConversationInfo
	61, // 32: api.ai.v1.UpdateConversationRequest.config:type_name -> api.ai.v1.UpdateConversationRequest.ConfigEntry
	6,  // 33: api.ai.v1.UpdateConversationReply.conversation:type_name -> api.ai.v1.ConversationInfo
	0,  // 34: api.ai.v1.ListConversationsRequest.status:type_name -> api.ai.v1.ConversationStatus
	6,  // 35: api.ai.v1.ListConversationsReply.conversations:type_name -> api.ai.v1.ConversationInfo
	6,  // 36: api.ai.v1.RestoreConversationReply.conversation:type_name -> api.ai.v1.ConversationInfo
	11, // 37: api.ai.v1.SendMessageRequest.attachments:type_name -> api.ai.v1.MessageAttachment
	62, // 38: api.ai.v1.SendMessageRequest.options:type_name -> api.ai.v1.SendMessageRequest.OptionsEntry
	10, // 39: api.ai.v1.SendMessageReply.user_message:type_name -> api.ai.v1.Message
	10, // 40: api.ai.v1.SendMessageReply.assistant_message:type_name -> api.ai.v1.Message
	10, // 41: api.ai.v1.SendMessageStreamReply.final_message:type_name -> api.ai.v1.Message
	1,  // 42: api.ai.v1.GetMessagesRequest.role_filter:type_name -> api.ai.v1.MessageRole
	2,  // 43: api.ai.v1.GetMessagesRequest.status_filter:type_name -> api.ai.v1.MessageStatus
	10, // 44: api.ai.v1.GetMessagesReply.messages:type_name -> api.ai.v1.Message
	63, // 45: api.ai.v1.RegenerateMessageRequest.options:type_name -> api.ai.v1.RegenerateMessageRequest.OptionsEntry
	10, // 46: api.ai.v1.RegenerateMessageReply.new_message:type_name -> api.ai.v1.Message
	8,  // 47: api.ai.v1.GetConversationContextReply.context:type_name -> api.ai.v1.ConversationContext
	8,  // 48: api.ai.v1.UpdateConversationContextRequest.context:type_name -> api.ai.v1.ConversationContext
	7,  // 49: api.ai.v1.SetConversationMemoryRequest.memory:type_name -> api.ai.v1.ConversationMemory
	7,  // 50: api.ai.v1.GetConversationMemoryReply.memory:type_name -> api.ai.v1.ConversationMemory
	9,  // 51: api.ai.v1.GetConversationStatsReply.stats:type_name -> api.ai.v1.ConversationStats
	64, // 52: api.ai.v1.GetConversationStatsReply.cost_breakdown:type_name -> api.ai.v1.GetConversationStatsReply.CostBreakdownEntry
	5,  // 53: api.ai.v1.ExportConversationRequest.format:type_name -> api.ai.v1.ExportFormat
	5,  // 54: api.ai.v1.ImportConversationRequest.format:type_name -> api.ai.v1.ExportFormat
	6,  // 55: api.ai.v1.ImportConversationReply.conversations:type_name -> api.ai.v1.ConversationInfo
	14, // 56: api.ai.v1.Conversation.CreateConversation:input_type -> api.ai.v1.CreateConversationRequest
	16, // 57: api.ai.v1.Conversation.GetConversation:input_type -> api.ai.v1.GetConversationRequest
	18, // 58: api.ai.v1.Conversation.UpdateConversation:input_type -> api.ai.v1.UpdateConversationRequest
	20, // 59: api.ai.v1.Conversation.DeleteConversation:input_type -> api.ai.v1.DeleteConversationRequest
	22, // 60: api.ai.v1.Conversation.ListConversations:input_type -> api.ai.v1.ListConversationsRequest
	24, // 61: api.ai.v1.Conversation.ArchiveConversation:input_type -> api.ai.v1.ArchiveConversationRequest
	26, // 62: api.ai.v1.Conversation.RestoreConversation:input_type -> api.ai.v1.RestoreConversationRequest
	28, // 63: api.ai.v1.Conversation.SendMessage:input_type -> api.ai.v1.SendMessageRequest
	28, // 64: api.ai.v1.Conversation.SendStreamMessage:input_type -> api.ai.v1.SendMessageRequest
	31, // 65: api.ai.v1.Conversation.GetMessages:input_type -> api.ai.v1.GetMessagesRequest
	33, // 66: api.ai.v1.Conversation.DeleteMessage:input_type -> api.ai.v1.DeleteMessageRequest
	35, // 67: api.ai.v1.Conversation.RegenerateMessage:input_type -> api.ai.v1.RegenerateMessageRequest
	37, // 68: api.ai.v1.Conversation.GetConversationContext:input_type -> api.ai.v1.GetConversationContextRequest
	39, // 69: api.ai.v1.Conversation.UpdateConversationContext:input_type -> api.ai.v1.UpdateConversationContextRequest
	41, // 70: api.ai.v1.Conversation.SummarizeConversation:input_type -> api.ai.v1.SummarizeConversationRequest
	43, // 71: api.ai.v1.Conversation.ClearConversationHistory:input_type -> api.ai.v1.ClearConversationHistoryRequest
	45, // 72: api.ai.v1.Conversation.SetConversationMemory:input_type -> api.ai.v1.SetConversationMemoryRequest
	47, // 73: api.ai.v1.Conversation.GetConversationMemory:input_type -> api.ai.v1.GetConversationMemoryRequest
	49, // 74: api.ai.v1.Conversation.GetConversationStats:input_type -> api.ai.v1.GetConversationStatsRequest
	51, // 75: api.ai.v1.Conversation.ExportConversation:input_type -> api.ai.v1.ExportConversationRequest
	53, // 76: api.ai.v1.Conversation.ImportConversation:input_type -> api.ai.v1.ImportConversationRequest
	15, // 77: api.ai.v1.Conversation.CreateConversation:output_type -> api.ai.v1.CreateConversationReply
	17, // 78: api.ai.v1.Conversation.GetConversation:output_type -> api.ai.v1.GetConversationReply
	19, // 79: api.ai.v1.Conversation.UpdateConversation:output_type -> api.ai.v1.UpdateConversationReply
	21, // 80: api.ai.v1.Conversation.DeleteConversation:output_type -> api.ai.v1.DeleteConversationReply
	23, // 81: api.ai.v1.Conversation.ListConversations:output_type -> api.ai.v1.ListConversationsReply
	25, // 82: api.ai.v1.Conversation.ArchiveConversation:output_type -> api.ai.v1.ArchiveConversationReply
	27, // 83: api.ai.v1.Conversation.RestoreConversation:output_type -> api.ai.v1.RestoreConversationReply
	29, // 84: api.ai.v1.Conversation.SendMessage:output_type -> api.ai.v1.SendMessageReply
	30, // 85: api.ai.v1.Conversation.SendStreamMessage:output_type -> api.ai.v1.SendMessageStreamReply
	32, // 86: api.ai.v1.Conversation.GetMessages:output_type -> api.ai.v1.GetMessagesReply
	34, // 87: api.ai.v1.Conversation.DeleteMessage:output_type -> api.ai.v1.DeleteMessageReply
	36, // 88: api.ai.v1.Conversation.RegenerateMessage:output_type -> api.ai.v1.RegenerateMessageReply
	38, // 89: api.ai.v1.Conversation.GetConversationContext:output_type -> api.ai.v1.GetConversationContextReply
	40, // 90: api.ai.v1.Conversation.UpdateConversationContext:output_type -> api.ai.v1.UpdateConversationContextReply
	42, // 91: api.ai.v1.Conversation.SummarizeConversation:output_type -> api.ai.v1.SummarizeConversationReply
	44, // 92: api.ai.v1.Conversation.ClearConversationHistory:output_type -> api.ai.v1.ClearConversationHistoryReply
	46, // 93: api.ai.v1.Conversation.SetConversationMemory:output_type -> api.ai.v1.SetConversationMemoryReply
	48, // 94: api.ai.v1.Conversation.GetConversationMemory:output_type -> api.ai.v1.GetConversationMemoryReply
	50, // 95: api.ai.v1.Conversation.GetConversationStats:output_type -> api.ai.v1.GetConversationStatsReply
	52, // 96: api.ai.v1.Conversation.ExportConversation:output_type -> api.ai.v1.ExportConversationReply
	54, // 97: api.ai.v1.Conversation.ImportConversation:output_type -> api.ai.v1.ImportConversationReply
	77, // [77:98] is the sub-list for method output_type
	56, // [56:77] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_api_ai_v1_conversation_proto_init() }
func file_api_ai_v1_conversation_proto_init() {
	if File_api_ai_v1_conversation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ai_v1_conversation_proto_rawDesc), len(file_api_ai_v1_conversation_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ai_v1_conversation_proto_goTypes,
		DependencyIndexes: file_api_ai_v1_conversation_proto_depIdxs,
		EnumInfos:         file_api_ai_v1_conversation_proto_enumTypes,
		MessageInfos:      file_api_ai_v1_conversation_proto_msgTypes,
	}.Build()
	File_api_ai_v1_conversation_proto = out.File
	file_api_ai_v1_conversation_proto_goTypes = nil
	file_api_ai_v1_conversation_proto_depIdxs = nil
}
