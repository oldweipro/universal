syntax = "proto3";

package api.system.v1;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "universal/api/system/v1;v1";
option java_multiple_files = true;
option java_package = "com.oldwei.universal.api.system.v1";
option java_outer_classname = "SystemProtoV1";

service User {
	// 基础CRUD操作
	rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
	}
	rpc DeleteUser (DeleteUserRequest) returns (OperationReply) {
	}
	rpc GetUser (GetUserRequest) returns (GetUserReply) {
	}
	rpc ListUser (ListUserRequest) returns (ListUserReply) {
	}
	
	// 扩展操作
	rpc BatchDeleteUser (BatchDeleteUserRequest) returns (BatchDeleteUserReply) {
	}
	rpc UpdateUserStatus (UpdateUserStatusRequest) returns (OperationReply) {
	}
	rpc ChangePassword (ChangePasswordRequest) returns (OperationReply) {
	}
	rpc GetUserStats (GetUserStatsRequest) returns (GetUserStatsReply) {
	}
}

message UserInfo {
	int64 id = 1;
	string username = 2;
	string email = 3;
	// 密码字段已移除，不在响应中返回
	string phone = 4;
	string nickname = 5;
	string avatar = 6;
	int32 status = 7; // 1:正常 0:禁用
	google.protobuf.Timestamp created_at = 8;
	google.protobuf.Timestamp updated_at = 9;
}

message CreateUserRequest {
	string username = 1 [(validate.rules).string = {min_len: 3, max_len: 50}];
	string email = 2 [(validate.rules).string.email = true];
	string password = 3 [(validate.rules).string.min_len = 6];
	string phone = 4;
	string nickname = 5 [(validate.rules).string.max_len = 100];
	string avatar = 6;
	int32 status = 7;
}

message CreateUserReply {
	UserInfo user = 1;
}

message UpdateUserRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
	string email = 2 [(validate.rules).string.email = true];
	string password = 3;
	string phone = 4;
	string nickname = 5 [(validate.rules).string.max_len = 100];
	string avatar = 6;
	int32 status = 7;
}

message UpdateUserReply {
	UserInfo user = 1;
}

message DeleteUserRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetUserRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetUserReply {
	UserInfo user = 1;
}

message ListUserRequest {
	int32 page = 1 [(validate.rules).int32 = {gte: 1}];
	int32 page_size = 2 [(validate.rules).int32 = {gte: 1, lte: 100}];
	string keyword = 3;
	int32 status = 4;
}

message ListUserReply {
	repeated UserInfo users = 1;
	int64 total = 2;
	int32 page = 3;
	int32 page_size = 4;
}

// 通用操作响应
message OperationReply {
	bool success = 1;           // 操作是否成功
	string message = 2;         // 操作结果消息
	int32 affected_count = 3;   // 影响的记录数
}

// 扩展操作消息定义
message BatchDeleteUserRequest {
	repeated int64 ids = 1 [(validate.rules).repeated.min_items = 1];
}

message BatchDeleteUserReply {
	int32 deleted_count = 1;        // 成功删除数量
	int32 failed_count = 2;         // 删除失败数量
	repeated int64 failed_ids = 3;  // 删除失败的ID列表
	string message = 4;             // 操作结果消息
}

message UpdateUserStatusRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
	int32 status = 2 [(validate.rules).int32 = {in: [0, 1]}];
}

message ChangePasswordRequest {
	int64 id = 1 [(validate.rules).int64.gt = 0];
	string old_password = 2 [(validate.rules).string.min_len = 6];
	string new_password = 3 [(validate.rules).string.min_len = 6];
}

message GetUserStatsRequest {
	// 统计查询请求，暂时无需参数，但保留扩展性
}

message GetUserStatsReply {
	int64 total_users = 1;      // 总用户数
	int64 active_users = 2;     // 活跃用户数
	int64 disabled_users = 3;   // 禁用用户数
	int64 today_new_users = 4;  // 今日新增用户数
}